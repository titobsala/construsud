{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/titob/OneDrive - Ensino Lus\\xF3fona/EXO/repo-tito/construsud/orcaworks/src/context/BudgetContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport initialBudget from '../data/initialBudget';\nimport { projectService } from '../services/projectService';\nimport { budgetService } from '../services/budgetService';\nimport { useAuth } from './AuthContext';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetContext = /*#__PURE__*/createContext();\nexport const useBudget = () => {\n  _s();\n  return useContext(BudgetContext);\n};\n_s(useBudget, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const BudgetProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(null);\n  const [budget, setBudget] = useState(initialBudget);\n  const [activeChapter, setActiveChapter] = useState('CAR 1');\n  const [showEditItemModal, setShowEditItemModal] = useState(false);\n  const [showNewChapterModal, setShowNewChapterModal] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user projects when user is authenticated\n  useEffect(() => {\n    const loadProjects = async () => {\n      if (!user) {\n        setProjects([]);\n        setBudget(initialBudget);\n        setLoading(false);\n        return;\n      }\n      setLoading(true);\n      try {\n        const {\n          data,\n          error\n        } = await projectService.getProjects();\n        if (error) {\n          console.error('Error loading projects:', error);\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n        if (data && data.length > 0) {\n          const projectsWithActive = data.map((project, index) => ({\n            ...project,\n            active: index === 0 // First project is active by default\n          }));\n          setProjects(projectsWithActive);\n          setActiveProject(projectsWithActive[0].id);\n\n          // Load the first project's budget\n          await loadProjectBudget(projectsWithActive[0].id);\n        } else {\n          // If no projects, use default budget\n          setProjects([]);\n          setBudget(initialBudget);\n        }\n      } catch (err) {\n        console.error('Unexpected error loading projects:', err);\n        setError('Failed to load projects. Please try again later.');\n      }\n      setLoading(false);\n    };\n    loadProjects();\n  }, [user]);\n\n  // Load complete project data including budget\n  const loadProjectBudget = async projectId => {\n    try {\n      const {\n        data,\n        error\n      } = await projectService.getCompleteProject(projectId);\n      if (error) {\n        console.error('Error loading project budget:', error);\n        setError(error.message);\n        return;\n      }\n      setBudget(data.budget);\n\n      // Set first chapter as active\n      const chapterKeys = Object.keys(data.budget.chapters);\n      if (chapterKeys.length > 0) {\n        setActiveChapter(chapterKeys[0]);\n      }\n    } catch (err) {\n      console.error('Unexpected error loading project budget:', err);\n      setError('Failed to load project data. Please try again later.');\n    }\n  };\n\n  // Calculate item value\n  const calculateItemValue = (qty, unitPrice) => {\n    return Number((qty * unitPrice).toFixed(2));\n  };\n\n  // Calculate chapter total\n  const calculateChapterTotal = chapterKey => {\n    var _budget$chapters$chap;\n    if (!((_budget$chapters$chap = budget.chapters[chapterKey]) !== null && _budget$chapters$chap !== void 0 && _budget$chapters$chap.items)) return 0;\n    return budget.chapters[chapterKey].items.reduce((sum, item) => sum + item.VALOR, 0);\n  };\n\n  // Calculate total material costs\n  const calculateTotalMaterialCost = () => {\n    return Object.keys(budget.chapters).reduce((sum, chapterKey) => sum + calculateChapterTotal(chapterKey), 0);\n  };\n\n  // Recalculate all budget values\n  const recalculateBudget = () => {\n    // Recalculate each item value\n    const updatedChapters = {\n      ...budget.chapters\n    };\n    Object.keys(updatedChapters).forEach(chapterKey => {\n      updatedChapters[chapterKey].items = updatedChapters[chapterKey].items.map(item => ({\n        ...item,\n        VALOR: calculateItemValue(item.QTD, item.VALOR_UNITARIO)\n      }));\n    });\n\n    // Recalculate total costs\n    const custoSeco = calculateTotalMaterialCost();\n\n    // Calculate additional costs\n    const diversos = budget.CONTROLE_INTERNO.DIVERSOS.items[0];\n    const diversosTotal = diversos.Alimentacao_Euro + diversos.Passagens_Euro + diversos.Outros_Euro;\n    const subEmpreiteirosTotal = budget.CONTROLE_INTERNO.SUB_EMPREITEIROS.items[0].Total_Euro;\n    const amortizacoesTotal = budget.CONTROLE_INTERNO.AMORTIZACOES.items.reduce((sum, item) => sum + item.Total_Euro, 0);\n\n    // Calculate total cost\n    const custoTotal = custoSeco + diversosTotal + subEmpreiteirosTotal + amortizacoesTotal;\n\n    // Calculate margin and sale value\n    const margemPercentual = budget.CONTROLE_INTERNO.VENDA.items[0].Margem_Percentual;\n    const vendaEuro = custoTotal / (1 - margemPercentual / 100);\n    const margemEuro = vendaEuro - custoTotal;\n\n    // Update internal control values\n    const updatedControleInterno = {\n      ...budget.CONTROLE_INTERNO\n    };\n    updatedControleInterno.VENDA.items[0] = {\n      ...updatedControleInterno.VENDA.items[0],\n      Custo_Seco_Euro: Number(custoSeco.toFixed(2)),\n      Custo_Total_Euro: Number(custoTotal.toFixed(2)),\n      Venda_Euro: Number(vendaEuro.toFixed(2)),\n      Margem_Euro: Number(margemEuro.toFixed(2))\n    };\n\n    // Update budget state\n    setBudget({\n      ...budget,\n      chapters: updatedChapters,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n\n    // If connected to Supabase, update internal control data\n    if (user && activeProject) {\n      budgetService.updateInternalControl(activeProject, 'VENDA', updatedControleInterno.VENDA);\n    }\n  };\n\n  // Add new item to chapter\n  const addItem = async (chapterKey, newItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const localItemId = `${chapterKey.split(' ')[1]}-${chapter.items.length + 1}`;\n    const calculatedValue = calculateItemValue(newItem.QTD, newItem.VALOR_UNITARIO);\n    const localNewItem = {\n      ...newItem,\n      id: localItemId,\n      VALOR: calculatedValue\n    };\n    const updatedItems = [...chapter.items, localNewItem];\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the chapter ID\n        const {\n          data: chapters,\n          error: chaptersError\n        } = await supabase.from('chapters').select('id').eq('project_id', activeProject).eq('chapter_key', chapterKey).single();\n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n\n        // Add item to database\n        const {\n          data,\n          error\n        } = await budgetService.createItem(chapters.id, newItem);\n        if (error) {\n          console.error('Error adding item to database:', error);\n          // Could revert local state here if needed\n          return;\n        }\n\n        // Update local state with server generated ID if needed\n        // Currently using the same item ID format\n      } catch (err) {\n        console.error('Unexpected error adding item:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Update existing item\n  const updateItem = async (chapterKey, itemId, updatedItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    if (itemIndex === -1) return;\n    const calculatedValue = calculateItemValue(updatedItem.QTD, updatedItem.VALOR_UNITARIO);\n    const updatedItems = [...chapter.items];\n    updatedItems[itemIndex] = {\n      ...updatedItems[itemIndex],\n      ...updatedItem,\n      VALOR: calculatedValue\n    };\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const {\n          data: chapters,\n          error: chaptersError\n        } = await supabase.from('chapters').select('id').eq('project_id', activeProject).eq('chapter_key', chapterKey).single();\n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        const {\n          data: items,\n          error: itemsError\n        } = await supabase.from('budget_items').select('id').eq('chapter_id', chapters.id).eq('position', itemIndex) // Using position to match\n        .single();\n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n\n        // Update item in database\n        const {\n          error\n        } = await budgetService.updateItem(items.id, updatedItem);\n        if (error) {\n          console.error('Error updating item in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating item:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Delete item\n  const deleteItem = async (chapterKey, itemId) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    if (itemIndex === -1) return;\n    const updatedItems = chapter.items.filter(item => item.id !== itemId);\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const {\n          data: chapters,\n          error: chaptersError\n        } = await supabase.from('chapters').select('id').eq('project_id', activeProject).eq('chapter_key', chapterKey).single();\n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        const {\n          data: items,\n          error: itemsError\n        } = await supabase.from('budget_items').select('id').eq('chapter_id', chapters.id).eq('position', itemIndex) // Using position to match\n        .single();\n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n\n        // Delete item from database\n        const {\n          error\n        } = await budgetService.deleteItem(items.id);\n        if (error) {\n          console.error('Error deleting item from database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error deleting item:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Add new chapter\n  const addChapter = async (chapterKey, header) => {\n    if (budget.chapters[chapterKey]) return false; // Chapter already exists\n\n    // Update local state first for immediate UI feedback\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        header,\n        items: []\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const {\n          error\n        } = await budgetService.createChapter(activeProject, chapterKey, header);\n        if (error) {\n          console.error('Error adding chapter to database:', error);\n          // Could revert local state here if needed\n          return false;\n        }\n      } catch (err) {\n        console.error('Unexpected error adding chapter:', err);\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Update margin percentage\n  const updateMarginPercentage = async percentage => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = {\n      ...budget.CONTROLE_INTERNO\n    };\n    updatedControleInterno.VENDA.items[0].Margem_Percentual = percentage;\n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const {\n          error\n        } = await budgetService.updateInternalControl(activeProject, 'VENDA', updatedControleInterno.VENDA);\n        if (error) {\n          console.error('Error updating margin in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating margin:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Update diverse costs\n  const updateDiverseCosts = async diverseCosts => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = {\n      ...budget.CONTROLE_INTERNO\n    };\n    updatedControleInterno.DIVERSOS.items[0] = {\n      ...updatedControleInterno.DIVERSOS.items[0],\n      ...diverseCosts\n    };\n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const {\n          error\n        } = await budgetService.updateInternalControl(activeProject, 'DIVERSOS', updatedControleInterno.DIVERSOS);\n        if (error) {\n          console.error('Error updating diverse costs in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating diverse costs:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Format currency\n  const formatCurrency = value => {\n    var _budget$configuracoes, _budget$configuracoes2, _budget$configuracoes3;\n    const currency = (budget === null || budget === void 0 ? void 0 : (_budget$configuracoes = budget.configuracoes) === null || _budget$configuracoes === void 0 ? void 0 : _budget$configuracoes.moeda) || 'EUR';\n    const locale = (budget === null || budget === void 0 ? void 0 : (_budget$configuracoes2 = budget.configuracoes) === null || _budget$configuracoes2 === void 0 ? void 0 : _budget$configuracoes2.formato_numero) || 'pt-PT';\n    const decimals = (budget === null || budget === void 0 ? void 0 : (_budget$configuracoes3 = budget.configuracoes) === null || _budget$configuracoes3 === void 0 ? void 0 : _budget$configuracoes3.casas_decimais) || 2;\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: decimals\n    }).format(value);\n  };\n\n  // Add new project\n  const addProject = async projectData => {\n    if (!user) return null;\n    try {\n      // Add user_id to project data\n      const projectPayload = {\n        ...projectData,\n        user_id: user.id\n      };\n      const {\n        data,\n        error\n      } = await projectService.createProject(projectPayload);\n      if (error) {\n        console.error('Error creating project:', error);\n        setError(error.message);\n        return null;\n      }\n\n      // Add the project to local state\n      const newProject = {\n        ...data,\n        active: true // Make the new project active\n      };\n\n      // Update other projects to be inactive\n      const updatedProjects = projects.map(project => ({\n        ...project,\n        active: false\n      }));\n      setProjects([...updatedProjects, newProject]);\n      setActiveProject(newProject.id);\n\n      // Load the new project's budget\n      await loadProjectBudget(newProject.id);\n      return newProject.id;\n    } catch (err) {\n      console.error('Unexpected error creating project:', err);\n      setError('Failed to create project. Please try again later.');\n      return null;\n    }\n  };\n\n  // Set active project\n  const setActiveProjectById = async projectId => {\n    if (!projectId) return;\n    setActiveProject(projectId);\n\n    // Update projects active state\n    const updatedProjects = projects.map(project => ({\n      ...project,\n      active: project.id === projectId\n    }));\n    setProjects(updatedProjects);\n\n    // Load the selected project's budget\n    await loadProjectBudget(projectId);\n  };\n  return /*#__PURE__*/_jsxDEV(BudgetContext.Provider, {\n    value: {\n      // Budget data and operations\n      budget,\n      activeChapter,\n      setActiveChapter,\n      showEditItemModal,\n      setShowEditItemModal,\n      showNewChapterModal,\n      setShowNewChapterModal,\n      currentItem,\n      setCurrentItem,\n      addItem,\n      updateItem,\n      deleteItem,\n      addChapter,\n      calculateChapterTotal,\n      calculateTotalMaterialCost,\n      updateMarginPercentage,\n      updateDiverseCosts,\n      formatCurrency,\n      recalculateBudget,\n      // Project management\n      projects,\n      activeProject,\n      addProject,\n      setActiveProjectById,\n      // Status\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 566,\n    columnNumber: 5\n  }, this);\n};\n_s2(BudgetProvider, \"nM+enVc/apDNqgF81nyrNGf3iS0=\", false, function () {\n  return [useAuth];\n});\n_c = BudgetProvider;\nexport default BudgetContext;\nvar _c;\n$RefreshReg$(_c, \"BudgetProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","initialBudget","projectService","budgetService","useAuth","supabase","jsxDEV","_jsxDEV","BudgetContext","useBudget","_s","BudgetProvider","children","_s2","user","projects","setProjects","activeProject","setActiveProject","budget","setBudget","activeChapter","setActiveChapter","showEditItemModal","setShowEditItemModal","showNewChapterModal","setShowNewChapterModal","currentItem","setCurrentItem","loading","setLoading","error","setError","loadProjects","data","getProjects","console","message","length","projectsWithActive","map","project","index","active","id","loadProjectBudget","err","projectId","getCompleteProject","chapterKeys","Object","keys","chapters","calculateItemValue","qty","unitPrice","Number","toFixed","calculateChapterTotal","chapterKey","_budget$chapters$chap","items","reduce","sum","item","VALOR","calculateTotalMaterialCost","recalculateBudget","updatedChapters","forEach","QTD","VALOR_UNITARIO","custoSeco","diversos","CONTROLE_INTERNO","DIVERSOS","diversosTotal","Alimentacao_Euro","Passagens_Euro","Outros_Euro","subEmpreiteirosTotal","SUB_EMPREITEIROS","Total_Euro","amortizacoesTotal","AMORTIZACOES","custoTotal","margemPercentual","VENDA","Margem_Percentual","vendaEuro","margemEuro","updatedControleInterno","Custo_Seco_Euro","Custo_Total_Euro","Venda_Euro","Margem_Euro","updateInternalControl","addItem","newItem","chapter","localItemId","split","calculatedValue","localNewItem","updatedItems","chaptersError","from","select","eq","single","createItem","updateItem","itemId","updatedItem","itemIndex","findIndex","itemsError","deleteItem","filter","addChapter","header","createChapter","updateMarginPercentage","percentage","updateDiverseCosts","diverseCosts","formatCurrency","value","_budget$configuracoes","_budget$configuracoes2","_budget$configuracoes3","currency","configuracoes","moeda","locale","formato_numero","decimals","casas_decimais","Intl","NumberFormat","style","minimumFractionDigits","format","addProject","projectData","projectPayload","user_id","createProject","newProject","updatedProjects","setActiveProjectById","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/titob/OneDrive - Ensino Lusófona/EXO/repo-tito/construsud/orcaworks/src/context/BudgetContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport initialBudget from '../data/initialBudget';\nimport { projectService } from '../services/projectService';\nimport { budgetService } from '../services/budgetService';\nimport { useAuth } from './AuthContext';\nimport { supabase } from '../lib/supabase';\n\nconst BudgetContext = createContext();\n\nexport const useBudget = () => useContext(BudgetContext);\n\nexport const BudgetProvider = ({ children }) => {\n  const { user } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(null);\n  const [budget, setBudget] = useState(initialBudget);\n  const [activeChapter, setActiveChapter] = useState('CAR 1');\n  const [showEditItemModal, setShowEditItemModal] = useState(false);\n  const [showNewChapterModal, setShowNewChapterModal] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Load user projects when user is authenticated\n  useEffect(() => {\n    const loadProjects = async () => {\n      if (!user) {\n        setProjects([]);\n        setBudget(initialBudget);\n        setLoading(false);\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        const { data, error } = await projectService.getProjects();\n        \n        if (error) {\n          console.error('Error loading projects:', error);\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n        \n        if (data && data.length > 0) {\n          const projectsWithActive = data.map((project, index) => ({\n            ...project,\n            active: index === 0 // First project is active by default\n          }));\n          \n          setProjects(projectsWithActive);\n          setActiveProject(projectsWithActive[0].id);\n          \n          // Load the first project's budget\n          await loadProjectBudget(projectsWithActive[0].id);\n        } else {\n          // If no projects, use default budget\n          setProjects([]);\n          setBudget(initialBudget);\n        }\n      } catch (err) {\n        console.error('Unexpected error loading projects:', err);\n        setError('Failed to load projects. Please try again later.');\n      }\n      \n      setLoading(false);\n    };\n    \n    loadProjects();\n  }, [user]);\n  \n  // Load complete project data including budget\n  const loadProjectBudget = async (projectId) => {\n    try {\n      const { data, error } = await projectService.getCompleteProject(projectId);\n      \n      if (error) {\n        console.error('Error loading project budget:', error);\n        setError(error.message);\n        return;\n      }\n      \n      setBudget(data.budget);\n      \n      // Set first chapter as active\n      const chapterKeys = Object.keys(data.budget.chapters);\n      if (chapterKeys.length > 0) {\n        setActiveChapter(chapterKeys[0]);\n      }\n      \n    } catch (err) {\n      console.error('Unexpected error loading project budget:', err);\n      setError('Failed to load project data. Please try again later.');\n    }\n  };\n\n  // Calculate item value\n  const calculateItemValue = (qty, unitPrice) => {\n    return Number((qty * unitPrice).toFixed(2));\n  };\n\n  // Calculate chapter total\n  const calculateChapterTotal = (chapterKey) => {\n    if (!budget.chapters[chapterKey]?.items) return 0;\n    return budget.chapters[chapterKey].items.reduce(\n      (sum, item) => sum + item.VALOR,\n      0\n    );\n  };\n\n  // Calculate total material costs\n  const calculateTotalMaterialCost = () => {\n    return Object.keys(budget.chapters).reduce(\n      (sum, chapterKey) => sum + calculateChapterTotal(chapterKey),\n      0\n    );\n  };\n\n  // Recalculate all budget values\n  const recalculateBudget = () => {\n    // Recalculate each item value\n    const updatedChapters = { ...budget.chapters };\n    \n    Object.keys(updatedChapters).forEach(chapterKey => {\n      updatedChapters[chapterKey].items = updatedChapters[chapterKey].items.map(item => ({\n        ...item,\n        VALOR: calculateItemValue(item.QTD, item.VALOR_UNITARIO)\n      }));\n    });\n    \n    // Recalculate total costs\n    const custoSeco = calculateTotalMaterialCost();\n    \n    // Calculate additional costs\n    const diversos = budget.CONTROLE_INTERNO.DIVERSOS.items[0];\n    const diversosTotal = \n      diversos.Alimentacao_Euro + \n      diversos.Passagens_Euro + \n      diversos.Outros_Euro;\n    \n    const subEmpreiteirosTotal = budget.CONTROLE_INTERNO.SUB_EMPREITEIROS.items[0].Total_Euro;\n    \n    const amortizacoesTotal = budget.CONTROLE_INTERNO.AMORTIZACOES.items.reduce(\n      (sum, item) => sum + item.Total_Euro, \n      0\n    );\n    \n    // Calculate total cost\n    const custoTotal = custoSeco + diversosTotal + subEmpreiteirosTotal + amortizacoesTotal;\n    \n    // Calculate margin and sale value\n    const margemPercentual = budget.CONTROLE_INTERNO.VENDA.items[0].Margem_Percentual;\n    const vendaEuro = custoTotal / (1 - (margemPercentual / 100));\n    const margemEuro = vendaEuro - custoTotal;\n    \n    // Update internal control values\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.VENDA.items[0] = {\n      ...updatedControleInterno.VENDA.items[0],\n      Custo_Seco_Euro: Number(custoSeco.toFixed(2)),\n      Custo_Total_Euro: Number(custoTotal.toFixed(2)),\n      Venda_Euro: Number(vendaEuro.toFixed(2)),\n      Margem_Euro: Number(margemEuro.toFixed(2))\n    };\n    \n    // Update budget state\n    setBudget({\n      ...budget,\n      chapters: updatedChapters,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, update internal control data\n    if (user && activeProject) {\n      budgetService.updateInternalControl(\n        activeProject, \n        'VENDA', \n        updatedControleInterno.VENDA\n      );\n    }\n  };\n\n  // Add new item to chapter\n  const addItem = async (chapterKey, newItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const localItemId = `${chapterKey.split(' ')[1]}-${chapter.items.length + 1}`;\n    const calculatedValue = calculateItemValue(newItem.QTD, newItem.VALOR_UNITARIO);\n    \n    const localNewItem = {\n      ...newItem,\n      id: localItemId,\n      VALOR: calculatedValue\n    };\n    \n    const updatedItems = [...chapter.items, localNewItem];\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the chapter ID\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        // Add item to database\n        const { data, error } = await budgetService.createItem(chapters.id, newItem);\n        \n        if (error) {\n          console.error('Error adding item to database:', error);\n          // Could revert local state here if needed\n          return;\n        }\n        \n        // Update local state with server generated ID if needed\n        // Currently using the same item ID format\n      } catch (err) {\n        console.error('Unexpected error adding item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Update existing item\n  const updateItem = async (chapterKey, itemId, updatedItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex === -1) return;\n    \n    const calculatedValue = calculateItemValue(updatedItem.QTD, updatedItem.VALOR_UNITARIO);\n    \n    const updatedItems = [...chapter.items];\n    updatedItems[itemIndex] = {\n      ...updatedItems[itemIndex],\n      ...updatedItem,\n      VALOR: calculatedValue\n    };\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        const { data: items, error: itemsError } = await supabase\n          .from('budget_items')\n          .select('id')\n          .eq('chapter_id', chapters.id)\n          .eq('position', itemIndex) // Using position to match\n          .single();\n        \n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n        \n        // Update item in database\n        const { error } = await budgetService.updateItem(items.id, updatedItem);\n        \n        if (error) {\n          console.error('Error updating item in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Delete item\n  const deleteItem = async (chapterKey, itemId) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex === -1) return;\n    \n    const updatedItems = chapter.items.filter(item => item.id !== itemId);\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        const { data: items, error: itemsError } = await supabase\n          .from('budget_items')\n          .select('id')\n          .eq('chapter_id', chapters.id)\n          .eq('position', itemIndex) // Using position to match\n          .single();\n        \n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n        \n        // Delete item from database\n        const { error } = await budgetService.deleteItem(items.id);\n        \n        if (error) {\n          console.error('Error deleting item from database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error deleting item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Add new chapter\n  const addChapter = async (chapterKey, header) => {\n    if (budget.chapters[chapterKey]) return false; // Chapter already exists\n    \n    // Update local state first for immediate UI feedback\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        header,\n        items: []\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.createChapter(activeProject, chapterKey, header);\n        \n        if (error) {\n          console.error('Error adding chapter to database:', error);\n          // Could revert local state here if needed\n          return false;\n        }\n      } catch (err) {\n        console.error('Unexpected error adding chapter:', err);\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // Update margin percentage\n  const updateMarginPercentage = async (percentage) => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.VENDA.items[0].Margem_Percentual = percentage;\n    \n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.updateInternalControl(\n          activeProject,\n          'VENDA',\n          updatedControleInterno.VENDA\n        );\n        \n        if (error) {\n          console.error('Error updating margin in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating margin:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Update diverse costs\n  const updateDiverseCosts = async (diverseCosts) => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.DIVERSOS.items[0] = {\n      ...updatedControleInterno.DIVERSOS.items[0],\n      ...diverseCosts\n    };\n    \n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.updateInternalControl(\n          activeProject,\n          'DIVERSOS',\n          updatedControleInterno.DIVERSOS\n        );\n        \n        if (error) {\n          console.error('Error updating diverse costs in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating diverse costs:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Format currency\n  const formatCurrency = (value) => {\n    const currency = budget?.configuracoes?.moeda || 'EUR';\n    const locale = budget?.configuracoes?.formato_numero || 'pt-PT';\n    const decimals = budget?.configuracoes?.casas_decimais || 2;\n    \n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: decimals\n    }).format(value);\n  };\n  \n  // Add new project\n  const addProject = async (projectData) => {\n    if (!user) return null;\n    \n    try {\n      // Add user_id to project data\n      const projectPayload = {\n        ...projectData,\n        user_id: user.id\n      };\n      \n      const { data, error } = await projectService.createProject(projectPayload);\n      \n      if (error) {\n        console.error('Error creating project:', error);\n        setError(error.message);\n        return null;\n      }\n      \n      // Add the project to local state\n      const newProject = {\n        ...data,\n        active: true // Make the new project active\n      };\n      \n      // Update other projects to be inactive\n      const updatedProjects = projects.map(project => ({\n        ...project,\n        active: false\n      }));\n      \n      setProjects([...updatedProjects, newProject]);\n      setActiveProject(newProject.id);\n      \n      // Load the new project's budget\n      await loadProjectBudget(newProject.id);\n      \n      return newProject.id;\n    } catch (err) {\n      console.error('Unexpected error creating project:', err);\n      setError('Failed to create project. Please try again later.');\n      return null;\n    }\n  };\n  \n  // Set active project\n  const setActiveProjectById = async (projectId) => {\n    if (!projectId) return;\n    \n    setActiveProject(projectId);\n    \n    // Update projects active state\n    const updatedProjects = projects.map(project => ({\n      ...project,\n      active: project.id === projectId\n    }));\n    \n    setProjects(updatedProjects);\n    \n    // Load the selected project's budget\n    await loadProjectBudget(projectId);\n  };\n\n  return (\n    <BudgetContext.Provider\n      value={{\n        // Budget data and operations\n        budget,\n        activeChapter,\n        setActiveChapter,\n        showEditItemModal,\n        setShowEditItemModal,\n        showNewChapterModal,\n        setShowNewChapterModal,\n        currentItem,\n        setCurrentItem,\n        addItem,\n        updateItem,\n        deleteItem,\n        addChapter,\n        calculateChapterTotal,\n        calculateTotalMaterialCost,\n        updateMarginPercentage,\n        updateDiverseCosts,\n        formatCurrency,\n        recalculateBudget,\n        \n        // Project management\n        projects,\n        activeProject,\n        addProject,\n        setActiveProjectById,\n        \n        // Status\n        loading,\n        error\n      }}\n    >\n      {children}\n    </BudgetContext.Provider>\n  );\n};\n\nexport default BudgetContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}