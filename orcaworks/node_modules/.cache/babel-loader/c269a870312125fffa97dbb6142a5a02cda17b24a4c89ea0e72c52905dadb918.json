{"ast":null,"code":"import { supabase } from '../lib/supabase';\nexport const projectService = {\n  // Fetch all projects for the current user\n  async getProjects() {\n    const {\n      data,\n      error\n    } = await supabase.from('projects').select('*').order('created_at', {\n      ascending: false\n    });\n    if (error) {\n      console.error('Error fetching projects:', error);\n      return {\n        error\n      };\n    }\n    return {\n      data\n    };\n  },\n  // Fetch a single project by ID\n  async getProject(id) {\n    const {\n      data,\n      error\n    } = await supabase.from('projects').select('*').eq('id', id).single();\n    if (error) {\n      console.error('Error fetching project:', error);\n      return {\n        error\n      };\n    }\n    return {\n      data\n    };\n  },\n  // Create a new project\n  async createProject(projectData) {\n    const {\n      data,\n      error\n    } = await supabase.from('projects').insert([projectData]).select().single();\n    if (error) {\n      console.error('Error creating project:', error);\n      return {\n        error\n      };\n    }\n\n    // Create project settings\n    const {\n      error: settingsError\n    } = await supabase.from('project_settings').insert([{\n      project_id: data.id,\n      currency: projectData.currency || 'EUR',\n      number_format: 'PT-PT',\n      decimal_places: 2,\n      show_all_chapters: true,\n      default_margin: 30.00\n    }]);\n    if (settingsError) {\n      console.error('Error creating project settings:', settingsError);\n      return {\n        error: settingsError\n      };\n    }\n\n    // Initialize internal control sections\n    const internalControlTypes = ['VENDA', 'DIVERSOS', 'SUB_EMPREITEIROS', 'AMORTIZACOES'];\n    const internalControlData = [{\n      project_id: data.id,\n      type: 'VENDA',\n      data: {\n        header: \"Venda\",\n        items: [{\n          Custo_Seco_Euro: 0,\n          Custo_Total_Euro: 0,\n          Margem_Percentual: 30.00,\n          Venda_Euro: 0,\n          Margem_Euro: 0\n        }]\n      }\n    }, {\n      project_id: data.id,\n      type: 'DIVERSOS',\n      data: {\n        header: \"Diversos\",\n        items: [{\n          Alimentacao_Euro: 0,\n          Passagens_Euro: 0,\n          Outros_Euro: 0\n        }]\n      }\n    }, {\n      project_id: data.id,\n      type: 'SUB_EMPREITEIROS',\n      data: {\n        header: \"Sub-Empreiteiros\",\n        items: [{\n          Fornecedor_1_Euro: 0,\n          Fornecedor_2_Euro: 0,\n          Fornecedor_3_Euro: 0,\n          Fornecedor_4_Euro: 0,\n          Fornecedor_5_Euro: 0,\n          Total_Euro: 0\n        }]\n      }\n    }, {\n      project_id: data.id,\n      type: 'AMORTIZACOES',\n      data: {\n        header: \"Amortizações\",\n        items: [{\n          tipo: \"Material\",\n          Total_Euro: 0\n        }, {\n          tipo: \"Mão de Obra\",\n          Total_Euro: 0,\n          E_O_A: \"E\",\n          Duracao_Horas: 0,\n          Total_Euro_Mao_de_Obra: 0\n        }]\n      }\n    }];\n    for (const controlItem of internalControlData) {\n      const {\n        error: controlError\n      } = await supabase.from('internal_control').insert([controlItem]);\n      if (controlError) {\n        console.error(`Error creating internal control (${controlItem.type}):`, controlError);\n        return {\n          error: controlError\n        };\n      }\n    }\n    return {\n      data\n    };\n  },\n  // Update a project\n  async updateProject(id, updates) {\n    const {\n      data,\n      error\n    } = await supabase.from('projects').update(updates).eq('id', id).select().single();\n    if (error) {\n      console.error('Error updating project:', error);\n      return {\n        error\n      };\n    }\n    return {\n      data\n    };\n  },\n  // Delete a project\n  async deleteProject(id) {\n    // Delete related data first (cascade doesn't work with RLS)\n    // 1. Get all chapters for this project\n    const {\n      data: chapters,\n      error: chaptersError\n    } = await supabase.from('chapters').select('id').eq('project_id', id);\n    if (chaptersError) {\n      console.error('Error fetching chapters for deletion:', chaptersError);\n      return {\n        error: chaptersError\n      };\n    }\n\n    // 2. Delete all budget items for each chapter\n    for (const chapter of chapters) {\n      const {\n        error: itemsError\n      } = await supabase.from('budget_items').delete().eq('chapter_id', chapter.id);\n      if (itemsError) {\n        console.error('Error deleting budget items:', itemsError);\n        return {\n          error: itemsError\n        };\n      }\n    }\n\n    // 3. Delete all chapters\n    const {\n      error: chapterDeleteError\n    } = await supabase.from('chapters').delete().eq('project_id', id);\n    if (chapterDeleteError) {\n      console.error('Error deleting chapters:', chapterDeleteError);\n      return {\n        error: chapterDeleteError\n      };\n    }\n\n    // 4. Delete internal control data\n    const {\n      error: controlDeleteError\n    } = await supabase.from('internal_control').delete().eq('project_id', id);\n    if (controlDeleteError) {\n      console.error('Error deleting internal control data:', controlDeleteError);\n      return {\n        error: controlDeleteError\n      };\n    }\n\n    // 5. Delete project settings\n    const {\n      error: settingsDeleteError\n    } = await supabase.from('project_settings').delete().eq('project_id', id);\n    if (settingsDeleteError) {\n      console.error('Error deleting project settings:', settingsDeleteError);\n      return {\n        error: settingsDeleteError\n      };\n    }\n\n    // 6. Finally delete the project\n    const {\n      error: projectDeleteError\n    } = await supabase.from('projects').delete().eq('id', id);\n    if (projectDeleteError) {\n      console.error('Error deleting project:', projectDeleteError);\n      return {\n        error: projectDeleteError\n      };\n    }\n    return {\n      success: true\n    };\n  },\n  // Fetch the complete project data (project + chapters + items + settings + internal control)\n  async getCompleteProject(id) {\n    // Fetch the project\n    const {\n      data: project,\n      error: projectError\n    } = await supabase.from('projects').select('*').eq('id', id).single();\n    if (projectError) {\n      console.error('Error fetching project:', projectError);\n      return {\n        error: projectError\n      };\n    }\n\n    // Fetch project settings\n    const {\n      data: settings,\n      error: settingsError\n    } = await supabase.from('project_settings').select('*').eq('project_id', id).single();\n    if (settingsError && settingsError.code !== 'PGRST116') {\n      // Ignore \"no rows returned\" error\n      console.error('Error fetching project settings:', settingsError);\n      return {\n        error: settingsError\n      };\n    }\n\n    // Fetch chapters\n    const {\n      data: chapters,\n      error: chaptersError\n    } = await supabase.from('chapters').select('*').eq('project_id', id).order('position', {\n      ascending: true\n    });\n    if (chaptersError) {\n      console.error('Error fetching chapters:', chaptersError);\n      return {\n        error: chaptersError\n      };\n    }\n\n    // Fetch budget items for each chapter\n    const chaptersWithItems = {};\n    for (const chapter of chapters) {\n      const {\n        data: items,\n        error: itemsError\n      } = await supabase.from('budget_items').select('*').eq('chapter_id', chapter.id).order('position', {\n        ascending: true\n      });\n      if (itemsError) {\n        console.error('Error fetching budget items:', itemsError);\n        return {\n          error: itemsError\n        };\n      }\n\n      // Transform items to match the existing data structure\n      const transformedItems = items.map(item => ({\n        id: item.id,\n        MATERIAL: item.material,\n        UNIDADE: item.unit,\n        QTD: item.quantity,\n        VALOR_UNITARIO: item.unit_price,\n        VALOR: item.total_value\n      }));\n      chaptersWithItems[chapter.chapter_key] = {\n        header: chapter.header,\n        items: transformedItems\n      };\n    }\n\n    // Fetch internal control data\n    const {\n      data: internalControl,\n      error: controlError\n    } = await supabase.from('internal_control').select('*').eq('project_id', id);\n    if (controlError) {\n      console.error('Error fetching internal control data:', controlError);\n      return {\n        error: controlError\n      };\n    }\n\n    // Transform internal control data to match existing structure\n    const controleInterno = {};\n    internalControl.forEach(control => {\n      controleInterno[control.type] = control.data;\n    });\n\n    // Construct the complete budget object\n    const completeProject = {\n      id: project.id,\n      name: project.name,\n      client: project.client,\n      description: project.description,\n      type: project.type,\n      startDate: project.start_date,\n      currency: project.currency,\n      createdAt: project.created_at,\n      updatedAt: project.updated_at,\n      budget: {\n        project: {\n          id: project.id,\n          name: project.name,\n          client: project.client,\n          date_created: project.created_at,\n          last_modified: project.updated_at,\n          status: \"em_andamento\"\n        },\n        chapters: chaptersWithItems,\n        CONTROLE_INTERNO: controleInterno,\n        configuracoes: settings ? {\n          moeda: settings.currency,\n          formato_numero: settings.number_format,\n          casas_decimais: settings.decimal_places,\n          mostrar_todos_capitulos: settings.show_all_chapters,\n          margem_padrao: settings.default_margin\n        } : {\n          moeda: 'EUR',\n          formato_numero: 'PT-PT',\n          casas_decimais: 2,\n          mostrar_todos_capitulos: true,\n          margem_padrao: 30.00\n        }\n      }\n    };\n    return {\n      data: completeProject\n    };\n  }\n};","map":{"version":3,"names":["supabase","projectService","getProjects","data","error","from","select","order","ascending","console","getProject","id","eq","single","createProject","projectData","insert","settingsError","project_id","currency","number_format","decimal_places","show_all_chapters","default_margin","internalControlTypes","internalControlData","type","header","items","Custo_Seco_Euro","Custo_Total_Euro","Margem_Percentual","Venda_Euro","Margem_Euro","Alimentacao_Euro","Passagens_Euro","Outros_Euro","Fornecedor_1_Euro","Fornecedor_2_Euro","Fornecedor_3_Euro","Fornecedor_4_Euro","Fornecedor_5_Euro","Total_Euro","tipo","E_O_A","Duracao_Horas","Total_Euro_Mao_de_Obra","controlItem","controlError","updateProject","updates","update","deleteProject","chapters","chaptersError","chapter","itemsError","delete","chapterDeleteError","controlDeleteError","settingsDeleteError","projectDeleteError","success","getCompleteProject","project","projectError","settings","code","chaptersWithItems","transformedItems","map","item","MATERIAL","material","UNIDADE","unit","QTD","quantity","VALOR_UNITARIO","unit_price","VALOR","total_value","chapter_key","internalControl","controleInterno","forEach","control","completeProject","name","client","description","startDate","start_date","createdAt","created_at","updatedAt","updated_at","budget","date_created","last_modified","status","CONTROLE_INTERNO","configuracoes","moeda","formato_numero","casas_decimais","mostrar_todos_capitulos","margem_padrao"],"sources":["/mnt/c/Users/titob/OneDrive - Ensino Lusófona/EXO/repo-tito/construsud/orcaworks/src/services/projectService.js"],"sourcesContent":["import { supabase } from '../lib/supabase';\n\nexport const projectService = {\n  // Fetch all projects for the current user\n  async getProjects() {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching projects:', error);\n      return { error };\n    }\n    \n    return { data };\n  },\n  \n  // Fetch a single project by ID\n  async getProject(id) {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching project:', error);\n      return { error };\n    }\n    \n    return { data };\n  },\n  \n  // Create a new project\n  async createProject(projectData) {\n    const { data, error } = await supabase\n      .from('projects')\n      .insert([projectData])\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error creating project:', error);\n      return { error };\n    }\n    \n    // Create project settings\n    const { error: settingsError } = await supabase\n      .from('project_settings')\n      .insert([{\n        project_id: data.id,\n        currency: projectData.currency || 'EUR',\n        number_format: 'PT-PT',\n        decimal_places: 2,\n        show_all_chapters: true,\n        default_margin: 30.00\n      }]);\n    \n    if (settingsError) {\n      console.error('Error creating project settings:', settingsError);\n      return { error: settingsError };\n    }\n    \n    // Initialize internal control sections\n    const internalControlTypes = ['VENDA', 'DIVERSOS', 'SUB_EMPREITEIROS', 'AMORTIZACOES'];\n    const internalControlData = [\n      {\n        project_id: data.id,\n        type: 'VENDA',\n        data: {\n          header: \"Venda\",\n          items: [\n            {\n              Custo_Seco_Euro: 0,\n              Custo_Total_Euro: 0,\n              Margem_Percentual: 30.00,\n              Venda_Euro: 0,\n              Margem_Euro: 0\n            }\n          ]\n        }\n      },\n      {\n        project_id: data.id,\n        type: 'DIVERSOS',\n        data: {\n          header: \"Diversos\",\n          items: [\n            {\n              Alimentacao_Euro: 0,\n              Passagens_Euro: 0,\n              Outros_Euro: 0\n            }\n          ]\n        }\n      },\n      {\n        project_id: data.id,\n        type: 'SUB_EMPREITEIROS',\n        data: {\n          header: \"Sub-Empreiteiros\",\n          items: [\n            {\n              Fornecedor_1_Euro: 0,\n              Fornecedor_2_Euro: 0,\n              Fornecedor_3_Euro: 0,\n              Fornecedor_4_Euro: 0,\n              Fornecedor_5_Euro: 0,\n              Total_Euro: 0\n            }\n          ]\n        }\n      },\n      {\n        project_id: data.id,\n        type: 'AMORTIZACOES',\n        data: {\n          header: \"Amortizações\",\n          items: [\n            {\n              tipo: \"Material\",\n              Total_Euro: 0\n            },\n            {\n              tipo: \"Mão de Obra\",\n              Total_Euro: 0,\n              E_O_A: \"E\",\n              Duracao_Horas: 0,\n              Total_Euro_Mao_de_Obra: 0\n            }\n          ]\n        }\n      }\n    ];\n    \n    for (const controlItem of internalControlData) {\n      const { error: controlError } = await supabase\n        .from('internal_control')\n        .insert([controlItem]);\n      \n      if (controlError) {\n        console.error(`Error creating internal control (${controlItem.type}):`, controlError);\n        return { error: controlError };\n      }\n    }\n    \n    return { data };\n  },\n  \n  // Update a project\n  async updateProject(id, updates) {\n    const { data, error } = await supabase\n      .from('projects')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error updating project:', error);\n      return { error };\n    }\n    \n    return { data };\n  },\n  \n  // Delete a project\n  async deleteProject(id) {\n    // Delete related data first (cascade doesn't work with RLS)\n    // 1. Get all chapters for this project\n    const { data: chapters, error: chaptersError } = await supabase\n      .from('chapters')\n      .select('id')\n      .eq('project_id', id);\n    \n    if (chaptersError) {\n      console.error('Error fetching chapters for deletion:', chaptersError);\n      return { error: chaptersError };\n    }\n    \n    // 2. Delete all budget items for each chapter\n    for (const chapter of chapters) {\n      const { error: itemsError } = await supabase\n        .from('budget_items')\n        .delete()\n        .eq('chapter_id', chapter.id);\n      \n      if (itemsError) {\n        console.error('Error deleting budget items:', itemsError);\n        return { error: itemsError };\n      }\n    }\n    \n    // 3. Delete all chapters\n    const { error: chapterDeleteError } = await supabase\n      .from('chapters')\n      .delete()\n      .eq('project_id', id);\n    \n    if (chapterDeleteError) {\n      console.error('Error deleting chapters:', chapterDeleteError);\n      return { error: chapterDeleteError };\n    }\n    \n    // 4. Delete internal control data\n    const { error: controlDeleteError } = await supabase\n      .from('internal_control')\n      .delete()\n      .eq('project_id', id);\n    \n    if (controlDeleteError) {\n      console.error('Error deleting internal control data:', controlDeleteError);\n      return { error: controlDeleteError };\n    }\n    \n    // 5. Delete project settings\n    const { error: settingsDeleteError } = await supabase\n      .from('project_settings')\n      .delete()\n      .eq('project_id', id);\n    \n    if (settingsDeleteError) {\n      console.error('Error deleting project settings:', settingsDeleteError);\n      return { error: settingsDeleteError };\n    }\n    \n    // 6. Finally delete the project\n    const { error: projectDeleteError } = await supabase\n      .from('projects')\n      .delete()\n      .eq('id', id);\n    \n    if (projectDeleteError) {\n      console.error('Error deleting project:', projectDeleteError);\n      return { error: projectDeleteError };\n    }\n    \n    return { success: true };\n  },\n  \n  // Fetch the complete project data (project + chapters + items + settings + internal control)\n  async getCompleteProject(id) {\n    // Fetch the project\n    const { data: project, error: projectError } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (projectError) {\n      console.error('Error fetching project:', projectError);\n      return { error: projectError };\n    }\n    \n    // Fetch project settings\n    const { data: settings, error: settingsError } = await supabase\n      .from('project_settings')\n      .select('*')\n      .eq('project_id', id)\n      .single();\n    \n    if (settingsError && settingsError.code !== 'PGRST116') { // Ignore \"no rows returned\" error\n      console.error('Error fetching project settings:', settingsError);\n      return { error: settingsError };\n    }\n    \n    // Fetch chapters\n    const { data: chapters, error: chaptersError } = await supabase\n      .from('chapters')\n      .select('*')\n      .eq('project_id', id)\n      .order('position', { ascending: true });\n    \n    if (chaptersError) {\n      console.error('Error fetching chapters:', chaptersError);\n      return { error: chaptersError };\n    }\n    \n    // Fetch budget items for each chapter\n    const chaptersWithItems = {};\n    \n    for (const chapter of chapters) {\n      const { data: items, error: itemsError } = await supabase\n        .from('budget_items')\n        .select('*')\n        .eq('chapter_id', chapter.id)\n        .order('position', { ascending: true });\n      \n      if (itemsError) {\n        console.error('Error fetching budget items:', itemsError);\n        return { error: itemsError };\n      }\n      \n      // Transform items to match the existing data structure\n      const transformedItems = items.map(item => ({\n        id: item.id,\n        MATERIAL: item.material,\n        UNIDADE: item.unit,\n        QTD: item.quantity,\n        VALOR_UNITARIO: item.unit_price,\n        VALOR: item.total_value\n      }));\n      \n      chaptersWithItems[chapter.chapter_key] = {\n        header: chapter.header,\n        items: transformedItems\n      };\n    }\n    \n    // Fetch internal control data\n    const { data: internalControl, error: controlError } = await supabase\n      .from('internal_control')\n      .select('*')\n      .eq('project_id', id);\n    \n    if (controlError) {\n      console.error('Error fetching internal control data:', controlError);\n      return { error: controlError };\n    }\n    \n    // Transform internal control data to match existing structure\n    const controleInterno = {};\n    \n    internalControl.forEach(control => {\n      controleInterno[control.type] = control.data;\n    });\n    \n    // Construct the complete budget object\n    const completeProject = {\n      id: project.id,\n      name: project.name,\n      client: project.client,\n      description: project.description,\n      type: project.type,\n      startDate: project.start_date,\n      currency: project.currency,\n      createdAt: project.created_at,\n      updatedAt: project.updated_at,\n      budget: {\n        project: {\n          id: project.id,\n          name: project.name,\n          client: project.client,\n          date_created: project.created_at,\n          last_modified: project.updated_at,\n          status: \"em_andamento\"\n        },\n        chapters: chaptersWithItems,\n        CONTROLE_INTERNO: controleInterno,\n        configuracoes: settings ? {\n          moeda: settings.currency,\n          formato_numero: settings.number_format,\n          casas_decimais: settings.decimal_places,\n          mostrar_todos_capitulos: settings.show_all_chapters,\n          margem_padrao: settings.default_margin\n        } : {\n          moeda: 'EUR',\n          formato_numero: 'PT-PT',\n          casas_decimais: 2,\n          mostrar_todos_capitulos: true,\n          margem_padrao: 30.00\n        }\n      }\n    };\n    \n    return { data: completeProject };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}