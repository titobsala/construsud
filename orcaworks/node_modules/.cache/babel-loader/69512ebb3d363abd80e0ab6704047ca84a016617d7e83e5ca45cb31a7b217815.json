{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{supabase}from'../lib/supabase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[session,setSession]=useState(null);const[loading,setLoading]=useState(true);const[authError,setAuthError]=useState(null);useEffect(()=>{// Check active sessions and sets the user\nconst getSession=async()=>{var _data$session;setLoading(true);const{data,error}=await supabase.auth.getSession();if(error){console.error(error);setAuthError(error.message);}setSession(data.session);setUser(((_data$session=data.session)===null||_data$session===void 0?void 0:_data$session.user)||null);setLoading(false);};getSession();// Listen for changes to auth state\nconst{data:authListener}=supabase.auth.onAuthStateChange(async(event,session)=>{console.log(`Supabase auth event: ${event}`);setSession(session);setUser((session===null||session===void 0?void 0:session.user)||null);setLoading(false);});return()=>{authListener.subscription.unsubscribe();};},[]);// Sign up with email and password\nconst signUp=async _ref2=>{let{email,password,fullName}=_ref2;setLoading(true);setAuthError(null);const{data,error}=await supabase.auth.signUp({email,password,options:{data:{full_name:fullName}}});if(error){setAuthError(error.message);setLoading(false);return{error};}setLoading(false);return{data};};// Sign in with email and password\nconst signIn=async _ref3=>{let{email,password}=_ref3;setLoading(true);setAuthError(null);const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error){setAuthError(error.message);setLoading(false);return{error};}setLoading(false);return{data};};// Sign out\nconst signOut=async()=>{setLoading(true);const{error}=await supabase.auth.signOut();if(error){setAuthError(error.message);setLoading(false);return{error};}setSession(null);setUser(null);setLoading(false);return{success:true};};// Get user profile\nconst getUserProfile=async()=>{if(!user)return{data:null};const{data,error}=await supabase.from('profiles').select('*').eq('id',user.id).single();if(error){console.error('Error fetching user profile:',error);return{error};}return{data};};// Update user profile\nconst updateProfile=async updates=>{if(!user)return{data:null};const{data,error}=await supabase.from('profiles').update(updates).eq('id',user.id).select().single();if(error){console.error('Error updating profile:',error);return{error};}return{data};};// Reset password\nconst resetPassword=async email=>{setLoading(true);setAuthError(null);const{error}=await supabase.auth.resetPasswordForEmail(email,{redirectTo:`${window.location.origin}/reset-password`});if(error){setAuthError(error.message);setLoading(false);return{error};}setLoading(false);return{success:true};};// Update password\nconst updatePassword=async password=>{setLoading(true);setAuthError(null);const{error}=await supabase.auth.updateUser({password});if(error){setAuthError(error.message);setLoading(false);return{error};}setLoading(false);return{success:true};};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,session,loading,authError,signUp,signIn,signOut,resetPassword,updatePassword,getUserProfile,updateProfile},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","supabase","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","session","setSession","loading","setLoading","authError","setAuthError","getSession","_data$session","data","error","auth","console","message","authListener","onAuthStateChange","event","log","subscription","unsubscribe","signUp","_ref2","email","password","fullName","options","full_name","signIn","_ref3","signInWithPassword","signOut","success","getUserProfile","from","select","eq","id","single","updateProfile","updates","update","resetPassword","resetPasswordForEmail","redirectTo","window","location","origin","updatePassword","updateUser","Provider","value"],"sources":["/mnt/c/Users/titob/OneDrive - Ensino LusÃ³fona/EXO/repo-tito/construsud/orcaworks/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authError, setAuthError] = useState(null);\n\n  useEffect(() => {\n    // Check active sessions and sets the user\n    const getSession = async () => {\n      setLoading(true);\n      const { data, error } = await supabase.auth.getSession();\n      \n      if (error) {\n        console.error(error);\n        setAuthError(error.message);\n      }\n      \n      setSession(data.session);\n      setUser(data.session?.user || null);\n      setLoading(false);\n    };\n\n    getSession();\n\n    // Listen for changes to auth state\n    const { data: authListener } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log(`Supabase auth event: ${event}`);\n      setSession(session);\n      setUser(session?.user || null);\n      setLoading(false);\n    });\n\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Sign up with email and password\n  const signUp = async ({ email, password, fullName }) => {\n    setLoading(true);\n    setAuthError(null);\n    \n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          full_name: fullName,\n        },\n      },\n    });\n\n    if (error) {\n      setAuthError(error.message);\n      setLoading(false);\n      return { error };\n    }\n\n    setLoading(false);\n    return { data };\n  };\n\n  // Sign in with email and password\n  const signIn = async ({ email, password }) => {\n    setLoading(true);\n    setAuthError(null);\n    \n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) {\n      setAuthError(error.message);\n      setLoading(false);\n      return { error };\n    }\n\n    setLoading(false);\n    return { data };\n  };\n\n  // Sign out\n  const signOut = async () => {\n    setLoading(true);\n    const { error } = await supabase.auth.signOut();\n    \n    if (error) {\n      setAuthError(error.message);\n      setLoading(false);\n      return { error };\n    }\n\n    setSession(null);\n    setUser(null);\n    setLoading(false);\n    return { success: true };\n  };\n\n  // Get user profile\n  const getUserProfile = async () => {\n    if (!user) return { data: null };\n\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', user.id)\n      .single();\n\n    if (error) {\n      console.error('Error fetching user profile:', error);\n      return { error };\n    }\n\n    return { data };\n  };\n\n  // Update user profile\n  const updateProfile = async (updates) => {\n    if (!user) return { data: null };\n\n    const { data, error } = await supabase\n      .from('profiles')\n      .update(updates)\n      .eq('id', user.id)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error updating profile:', error);\n      return { error };\n    }\n\n    return { data };\n  };\n\n  // Reset password\n  const resetPassword = async (email) => {\n    setLoading(true);\n    setAuthError(null);\n    \n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`,\n    });\n\n    if (error) {\n      setAuthError(error.message);\n      setLoading(false);\n      return { error };\n    }\n\n    setLoading(false);\n    return { success: true };\n  };\n\n  // Update password\n  const updatePassword = async (password) => {\n    setLoading(true);\n    setAuthError(null);\n    \n    const { error } = await supabase.auth.updateUser({\n      password,\n    });\n\n    if (error) {\n      setAuthError(error.message);\n      setLoading(false);\n      return { error };\n    }\n\n    setLoading(false);\n    return { success: true };\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        session,\n        loading,\n        authError,\n        signUp,\n        signIn,\n        signOut,\n        resetPassword,\n        updatePassword,\n        getUserProfile,\n        updateProfile,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}