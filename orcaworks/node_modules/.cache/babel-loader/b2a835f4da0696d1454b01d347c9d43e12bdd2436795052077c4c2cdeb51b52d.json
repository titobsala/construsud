{"ast":null,"code":"import{supabase}from'../lib/supabase';export const projectService={// Fetch all projects for the current user\nasync getProjects(){const{data,error}=await supabase.from('projects').select('*').order('created_at',{ascending:false});if(error){console.error('Error fetching projects:',error);return{error};}return{data};},// Fetch a single project by ID\nasync getProject(id){const{data,error}=await supabase.from('projects').select('*').eq('id',id).single();if(error){console.error('Error fetching project:',error);return{error};}return{data};},// Create a new project\nasync createProject(projectData){const{data,error}=await supabase.from('projects').insert([projectData]).select().single();if(error){console.error('Error creating project:',error);return{error};}// Create project settings\nconst{error:settingsError}=await supabase.from('project_settings').insert([{project_id:data.id,currency:projectData.currency||'EUR',number_format:'PT-PT',decimal_places:2,show_all_chapters:true,default_margin:30.00}]);if(settingsError){console.error('Error creating project settings:',settingsError);return{error:settingsError};}// Initialize internal control sections\nconst internalControlTypes=['VENDA','DIVERSOS','SUB_EMPREITEIROS','AMORTIZACOES'];const internalControlData=[{project_id:data.id,type:'VENDA',data:{header:\"Venda\",items:[{Custo_Seco_Euro:0,Custo_Total_Euro:0,Margem_Percentual:30.00,Venda_Euro:0,Margem_Euro:0}]}},{project_id:data.id,type:'DIVERSOS',data:{header:\"Diversos\",items:[{Alimentacao_Euro:0,Passagens_Euro:0,Outros_Euro:0}]}},{project_id:data.id,type:'SUB_EMPREITEIROS',data:{header:\"Sub-Empreiteiros\",items:[{Fornecedor_1_Euro:0,Fornecedor_2_Euro:0,Fornecedor_3_Euro:0,Fornecedor_4_Euro:0,Fornecedor_5_Euro:0,Total_Euro:0}]}},{project_id:data.id,type:'AMORTIZACOES',data:{header:\"Amortizações\",items:[{tipo:\"Material\",Total_Euro:0},{tipo:\"Mão de Obra\",Total_Euro:0,E_O_A:\"E\",Duracao_Horas:0,Total_Euro_Mao_de_Obra:0}]}}];for(const controlItem of internalControlData){const{error:controlError}=await supabase.from('internal_control').insert([controlItem]);if(controlError){console.error(`Error creating internal control (${controlItem.type}):`,controlError);return{error:controlError};}}return{data};},// Update a project\nasync updateProject(id,updates){const{data,error}=await supabase.from('projects').update(updates).eq('id',id).select().single();if(error){console.error('Error updating project:',error);return{error};}return{data};},// Delete a project\nasync deleteProject(id){// Delete related data first (cascade doesn't work with RLS)\n// 1. Get all chapters for this project\nconst{data:chapters,error:chaptersError}=await supabase.from('chapters').select('id').eq('project_id',id);if(chaptersError){console.error('Error fetching chapters for deletion:',chaptersError);return{error:chaptersError};}// 2. Delete all budget items for each chapter\nfor(const chapter of chapters){const{error:itemsError}=await supabase.from('budget_items').delete().eq('chapter_id',chapter.id);if(itemsError){console.error('Error deleting budget items:',itemsError);return{error:itemsError};}}// 3. Delete all chapters\nconst{error:chapterDeleteError}=await supabase.from('chapters').delete().eq('project_id',id);if(chapterDeleteError){console.error('Error deleting chapters:',chapterDeleteError);return{error:chapterDeleteError};}// 4. Delete internal control data\nconst{error:controlDeleteError}=await supabase.from('internal_control').delete().eq('project_id',id);if(controlDeleteError){console.error('Error deleting internal control data:',controlDeleteError);return{error:controlDeleteError};}// 5. Delete project settings\nconst{error:settingsDeleteError}=await supabase.from('project_settings').delete().eq('project_id',id);if(settingsDeleteError){console.error('Error deleting project settings:',settingsDeleteError);return{error:settingsDeleteError};}// 6. Finally delete the project\nconst{error:projectDeleteError}=await supabase.from('projects').delete().eq('id',id);if(projectDeleteError){console.error('Error deleting project:',projectDeleteError);return{error:projectDeleteError};}return{success:true};},// Fetch the complete project data (project + chapters + items + settings + internal control)\nasync getCompleteProject(id){// Fetch the project\nconst{data:project,error:projectError}=await supabase.from('projects').select('*').eq('id',id).single();if(projectError){console.error('Error fetching project:',projectError);return{error:projectError};}// Fetch project settings\nconst{data:settings,error:settingsError}=await supabase.from('project_settings').select('*').eq('project_id',id).single();if(settingsError&&settingsError.code!=='PGRST116'){// Ignore \"no rows returned\" error\nconsole.error('Error fetching project settings:',settingsError);return{error:settingsError};}// Fetch chapters\nconst{data:chapters,error:chaptersError}=await supabase.from('chapters').select('*').eq('project_id',id).order('position',{ascending:true});if(chaptersError){console.error('Error fetching chapters:',chaptersError);return{error:chaptersError};}// Fetch budget items for each chapter\nconst chaptersWithItems={};for(const chapter of chapters){const{data:items,error:itemsError}=await supabase.from('budget_items').select('*').eq('chapter_id',chapter.id).order('position',{ascending:true});if(itemsError){console.error('Error fetching budget items:',itemsError);return{error:itemsError};}// Transform items to match the existing data structure\nconst transformedItems=items.map(item=>({id:item.id,MATERIAL:item.material,UNIDADE:item.unit,QTD:item.quantity,VALOR_UNITARIO:item.unit_price,VALOR:item.total_value}));chaptersWithItems[chapter.chapter_key]={header:chapter.header,items:transformedItems};}// Fetch internal control data\nconst{data:internalControl,error:controlError}=await supabase.from('internal_control').select('*').eq('project_id',id);if(controlError){console.error('Error fetching internal control data:',controlError);return{error:controlError};}// Transform internal control data to match existing structure\nconst controleInterno={};internalControl.forEach(control=>{controleInterno[control.type]=control.data;});// Construct the complete budget object\nconst completeProject={id:project.id,name:project.name,client:project.client,description:project.description,type:project.type,startDate:project.start_date,currency:project.currency,createdAt:project.created_at,updatedAt:project.updated_at,budget:{project:{id:project.id,name:project.name,client:project.client,date_created:project.created_at,last_modified:project.updated_at,status:\"em_andamento\"},chapters:chaptersWithItems,CONTROLE_INTERNO:controleInterno,configuracoes:settings?{moeda:settings.currency,formato_numero:settings.number_format,casas_decimais:settings.decimal_places,mostrar_todos_capitulos:settings.show_all_chapters,margem_padrao:settings.default_margin}:{moeda:'EUR',formato_numero:'PT-PT',casas_decimais:2,mostrar_todos_capitulos:true,margem_padrao:30.00}}};return{data:completeProject};}};","map":{"version":3,"names":["supabase","projectService","getProjects","data","error","from","select","order","ascending","console","getProject","id","eq","single","createProject","projectData","insert","settingsError","project_id","currency","number_format","decimal_places","show_all_chapters","default_margin","internalControlTypes","internalControlData","type","header","items","Custo_Seco_Euro","Custo_Total_Euro","Margem_Percentual","Venda_Euro","Margem_Euro","Alimentacao_Euro","Passagens_Euro","Outros_Euro","Fornecedor_1_Euro","Fornecedor_2_Euro","Fornecedor_3_Euro","Fornecedor_4_Euro","Fornecedor_5_Euro","Total_Euro","tipo","E_O_A","Duracao_Horas","Total_Euro_Mao_de_Obra","controlItem","controlError","updateProject","updates","update","deleteProject","chapters","chaptersError","chapter","itemsError","delete","chapterDeleteError","controlDeleteError","settingsDeleteError","projectDeleteError","success","getCompleteProject","project","projectError","settings","code","chaptersWithItems","transformedItems","map","item","MATERIAL","material","UNIDADE","unit","QTD","quantity","VALOR_UNITARIO","unit_price","VALOR","total_value","chapter_key","internalControl","controleInterno","forEach","control","completeProject","name","client","description","startDate","start_date","createdAt","created_at","updatedAt","updated_at","budget","date_created","last_modified","status","CONTROLE_INTERNO","configuracoes","moeda","formato_numero","casas_decimais","mostrar_todos_capitulos","margem_padrao"],"sources":["/mnt/c/Users/titob/OneDrive - Ensino Lusófona/EXO/repo-tito/construsud/orcaworks/src/services/projectService.js"],"sourcesContent":["import { supabase } from '../lib/supabase';\n\nexport const projectService = {\n  // Fetch all projects for the current user\n  async getProjects() {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching projects:', error);\n      return { error };\n    }\n    \n    return { data };\n  },\n  \n  // Fetch a single project by ID\n  async getProject(id) {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching project:', error);\n      return { error };\n    }\n    \n    return { data };\n  },\n  \n  // Create a new project\n  async createProject(projectData) {\n    const { data, error } = await supabase\n      .from('projects')\n      .insert([projectData])\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error creating project:', error);\n      return { error };\n    }\n    \n    // Create project settings\n    const { error: settingsError } = await supabase\n      .from('project_settings')\n      .insert([{\n        project_id: data.id,\n        currency: projectData.currency || 'EUR',\n        number_format: 'PT-PT',\n        decimal_places: 2,\n        show_all_chapters: true,\n        default_margin: 30.00\n      }]);\n    \n    if (settingsError) {\n      console.error('Error creating project settings:', settingsError);\n      return { error: settingsError };\n    }\n    \n    // Initialize internal control sections\n    const internalControlTypes = ['VENDA', 'DIVERSOS', 'SUB_EMPREITEIROS', 'AMORTIZACOES'];\n    const internalControlData = [\n      {\n        project_id: data.id,\n        type: 'VENDA',\n        data: {\n          header: \"Venda\",\n          items: [\n            {\n              Custo_Seco_Euro: 0,\n              Custo_Total_Euro: 0,\n              Margem_Percentual: 30.00,\n              Venda_Euro: 0,\n              Margem_Euro: 0\n            }\n          ]\n        }\n      },\n      {\n        project_id: data.id,\n        type: 'DIVERSOS',\n        data: {\n          header: \"Diversos\",\n          items: [\n            {\n              Alimentacao_Euro: 0,\n              Passagens_Euro: 0,\n              Outros_Euro: 0\n            }\n          ]\n        }\n      },\n      {\n        project_id: data.id,\n        type: 'SUB_EMPREITEIROS',\n        data: {\n          header: \"Sub-Empreiteiros\",\n          items: [\n            {\n              Fornecedor_1_Euro: 0,\n              Fornecedor_2_Euro: 0,\n              Fornecedor_3_Euro: 0,\n              Fornecedor_4_Euro: 0,\n              Fornecedor_5_Euro: 0,\n              Total_Euro: 0\n            }\n          ]\n        }\n      },\n      {\n        project_id: data.id,\n        type: 'AMORTIZACOES',\n        data: {\n          header: \"Amortizações\",\n          items: [\n            {\n              tipo: \"Material\",\n              Total_Euro: 0\n            },\n            {\n              tipo: \"Mão de Obra\",\n              Total_Euro: 0,\n              E_O_A: \"E\",\n              Duracao_Horas: 0,\n              Total_Euro_Mao_de_Obra: 0\n            }\n          ]\n        }\n      }\n    ];\n    \n    for (const controlItem of internalControlData) {\n      const { error: controlError } = await supabase\n        .from('internal_control')\n        .insert([controlItem]);\n      \n      if (controlError) {\n        console.error(`Error creating internal control (${controlItem.type}):`, controlError);\n        return { error: controlError };\n      }\n    }\n    \n    return { data };\n  },\n  \n  // Update a project\n  async updateProject(id, updates) {\n    const { data, error } = await supabase\n      .from('projects')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error updating project:', error);\n      return { error };\n    }\n    \n    return { data };\n  },\n  \n  // Delete a project\n  async deleteProject(id) {\n    // Delete related data first (cascade doesn't work with RLS)\n    // 1. Get all chapters for this project\n    const { data: chapters, error: chaptersError } = await supabase\n      .from('chapters')\n      .select('id')\n      .eq('project_id', id);\n    \n    if (chaptersError) {\n      console.error('Error fetching chapters for deletion:', chaptersError);\n      return { error: chaptersError };\n    }\n    \n    // 2. Delete all budget items for each chapter\n    for (const chapter of chapters) {\n      const { error: itemsError } = await supabase\n        .from('budget_items')\n        .delete()\n        .eq('chapter_id', chapter.id);\n      \n      if (itemsError) {\n        console.error('Error deleting budget items:', itemsError);\n        return { error: itemsError };\n      }\n    }\n    \n    // 3. Delete all chapters\n    const { error: chapterDeleteError } = await supabase\n      .from('chapters')\n      .delete()\n      .eq('project_id', id);\n    \n    if (chapterDeleteError) {\n      console.error('Error deleting chapters:', chapterDeleteError);\n      return { error: chapterDeleteError };\n    }\n    \n    // 4. Delete internal control data\n    const { error: controlDeleteError } = await supabase\n      .from('internal_control')\n      .delete()\n      .eq('project_id', id);\n    \n    if (controlDeleteError) {\n      console.error('Error deleting internal control data:', controlDeleteError);\n      return { error: controlDeleteError };\n    }\n    \n    // 5. Delete project settings\n    const { error: settingsDeleteError } = await supabase\n      .from('project_settings')\n      .delete()\n      .eq('project_id', id);\n    \n    if (settingsDeleteError) {\n      console.error('Error deleting project settings:', settingsDeleteError);\n      return { error: settingsDeleteError };\n    }\n    \n    // 6. Finally delete the project\n    const { error: projectDeleteError } = await supabase\n      .from('projects')\n      .delete()\n      .eq('id', id);\n    \n    if (projectDeleteError) {\n      console.error('Error deleting project:', projectDeleteError);\n      return { error: projectDeleteError };\n    }\n    \n    return { success: true };\n  },\n  \n  // Fetch the complete project data (project + chapters + items + settings + internal control)\n  async getCompleteProject(id) {\n    // Fetch the project\n    const { data: project, error: projectError } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (projectError) {\n      console.error('Error fetching project:', projectError);\n      return { error: projectError };\n    }\n    \n    // Fetch project settings\n    const { data: settings, error: settingsError } = await supabase\n      .from('project_settings')\n      .select('*')\n      .eq('project_id', id)\n      .single();\n    \n    if (settingsError && settingsError.code !== 'PGRST116') { // Ignore \"no rows returned\" error\n      console.error('Error fetching project settings:', settingsError);\n      return { error: settingsError };\n    }\n    \n    // Fetch chapters\n    const { data: chapters, error: chaptersError } = await supabase\n      .from('chapters')\n      .select('*')\n      .eq('project_id', id)\n      .order('position', { ascending: true });\n    \n    if (chaptersError) {\n      console.error('Error fetching chapters:', chaptersError);\n      return { error: chaptersError };\n    }\n    \n    // Fetch budget items for each chapter\n    const chaptersWithItems = {};\n    \n    for (const chapter of chapters) {\n      const { data: items, error: itemsError } = await supabase\n        .from('budget_items')\n        .select('*')\n        .eq('chapter_id', chapter.id)\n        .order('position', { ascending: true });\n      \n      if (itemsError) {\n        console.error('Error fetching budget items:', itemsError);\n        return { error: itemsError };\n      }\n      \n      // Transform items to match the existing data structure\n      const transformedItems = items.map(item => ({\n        id: item.id,\n        MATERIAL: item.material,\n        UNIDADE: item.unit,\n        QTD: item.quantity,\n        VALOR_UNITARIO: item.unit_price,\n        VALOR: item.total_value\n      }));\n      \n      chaptersWithItems[chapter.chapter_key] = {\n        header: chapter.header,\n        items: transformedItems\n      };\n    }\n    \n    // Fetch internal control data\n    const { data: internalControl, error: controlError } = await supabase\n      .from('internal_control')\n      .select('*')\n      .eq('project_id', id);\n    \n    if (controlError) {\n      console.error('Error fetching internal control data:', controlError);\n      return { error: controlError };\n    }\n    \n    // Transform internal control data to match existing structure\n    const controleInterno = {};\n    \n    internalControl.forEach(control => {\n      controleInterno[control.type] = control.data;\n    });\n    \n    // Construct the complete budget object\n    const completeProject = {\n      id: project.id,\n      name: project.name,\n      client: project.client,\n      description: project.description,\n      type: project.type,\n      startDate: project.start_date,\n      currency: project.currency,\n      createdAt: project.created_at,\n      updatedAt: project.updated_at,\n      budget: {\n        project: {\n          id: project.id,\n          name: project.name,\n          client: project.client,\n          date_created: project.created_at,\n          last_modified: project.updated_at,\n          status: \"em_andamento\"\n        },\n        chapters: chaptersWithItems,\n        CONTROLE_INTERNO: controleInterno,\n        configuracoes: settings ? {\n          moeda: settings.currency,\n          formato_numero: settings.number_format,\n          casas_decimais: settings.decimal_places,\n          mostrar_todos_capitulos: settings.show_all_chapters,\n          margem_padrao: settings.default_margin\n        } : {\n          moeda: 'EUR',\n          formato_numero: 'PT-PT',\n          casas_decimais: 2,\n          mostrar_todos_capitulos: true,\n          margem_padrao: 30.00\n        }\n      }\n    };\n    \n    return { data: completeProject };\n  }\n};"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,iBAAiB,CAE1C,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5B;AACA,KAAM,CAAAC,WAAWA,CAAA,CAAG,CAClB,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,CAAE,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CAE5C,GAAIJ,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,CAAEA,KAAM,CAAC,CAClB,CAEA,MAAO,CAAED,IAAK,CAAC,CACjB,CAAC,CAED;AACA,KAAM,CAAAO,UAAUA,CAACC,EAAE,CAAE,CACnB,KAAM,CAAER,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,IAAI,CAAED,EAAE,CAAC,CACZE,MAAM,CAAC,CAAC,CAEX,GAAIT,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,CAAEA,KAAM,CAAC,CAClB,CAEA,MAAO,CAAED,IAAK,CAAC,CACjB,CAAC,CAED;AACA,KAAM,CAAAW,aAAaA,CAACC,WAAW,CAAE,CAC/B,KAAM,CAAEZ,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,UAAU,CAAC,CAChBW,MAAM,CAAC,CAACD,WAAW,CAAC,CAAC,CACrBT,MAAM,CAAC,CAAC,CACRO,MAAM,CAAC,CAAC,CAEX,GAAIT,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,CAAEA,KAAM,CAAC,CAClB,CAEA;AACA,KAAM,CAAEA,KAAK,CAAEa,aAAc,CAAC,CAAG,KAAM,CAAAjB,QAAQ,CAC5CK,IAAI,CAAC,kBAAkB,CAAC,CACxBW,MAAM,CAAC,CAAC,CACPE,UAAU,CAAEf,IAAI,CAACQ,EAAE,CACnBQ,QAAQ,CAAEJ,WAAW,CAACI,QAAQ,EAAI,KAAK,CACvCC,aAAa,CAAE,OAAO,CACtBC,cAAc,CAAE,CAAC,CACjBC,iBAAiB,CAAE,IAAI,CACvBC,cAAc,CAAE,KAClB,CAAC,CAAC,CAAC,CAEL,GAAIN,aAAa,CAAE,CACjBR,OAAO,CAACL,KAAK,CAAC,kCAAkC,CAAEa,aAAa,CAAC,CAChE,MAAO,CAAEb,KAAK,CAAEa,aAAc,CAAC,CACjC,CAEA;AACA,KAAM,CAAAO,oBAAoB,CAAG,CAAC,OAAO,CAAE,UAAU,CAAE,kBAAkB,CAAE,cAAc,CAAC,CACtF,KAAM,CAAAC,mBAAmB,CAAG,CAC1B,CACEP,UAAU,CAAEf,IAAI,CAACQ,EAAE,CACnBe,IAAI,CAAE,OAAO,CACbvB,IAAI,CAAE,CACJwB,MAAM,CAAE,OAAO,CACfC,KAAK,CAAE,CACL,CACEC,eAAe,CAAE,CAAC,CAClBC,gBAAgB,CAAE,CAAC,CACnBC,iBAAiB,CAAE,KAAK,CACxBC,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CACf,CAAC,CAEL,CACF,CAAC,CACD,CACEf,UAAU,CAAEf,IAAI,CAACQ,EAAE,CACnBe,IAAI,CAAE,UAAU,CAChBvB,IAAI,CAAE,CACJwB,MAAM,CAAE,UAAU,CAClBC,KAAK,CAAE,CACL,CACEM,gBAAgB,CAAE,CAAC,CACnBC,cAAc,CAAE,CAAC,CACjBC,WAAW,CAAE,CACf,CAAC,CAEL,CACF,CAAC,CACD,CACElB,UAAU,CAAEf,IAAI,CAACQ,EAAE,CACnBe,IAAI,CAAE,kBAAkB,CACxBvB,IAAI,CAAE,CACJwB,MAAM,CAAE,kBAAkB,CAC1BC,KAAK,CAAE,CACL,CACES,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,CAAC,CACpBC,UAAU,CAAE,CACd,CAAC,CAEL,CACF,CAAC,CACD,CACExB,UAAU,CAAEf,IAAI,CAACQ,EAAE,CACnBe,IAAI,CAAE,cAAc,CACpBvB,IAAI,CAAE,CACJwB,MAAM,CAAE,cAAc,CACtBC,KAAK,CAAE,CACL,CACEe,IAAI,CAAE,UAAU,CAChBD,UAAU,CAAE,CACd,CAAC,CACD,CACEC,IAAI,CAAE,aAAa,CACnBD,UAAU,CAAE,CAAC,CACbE,KAAK,CAAE,GAAG,CACVC,aAAa,CAAE,CAAC,CAChBC,sBAAsB,CAAE,CAC1B,CAAC,CAEL,CACF,CAAC,CACF,CAED,IAAK,KAAM,CAAAC,WAAW,GAAI,CAAAtB,mBAAmB,CAAE,CAC7C,KAAM,CAAErB,KAAK,CAAE4C,YAAa,CAAC,CAAG,KAAM,CAAAhD,QAAQ,CAC3CK,IAAI,CAAC,kBAAkB,CAAC,CACxBW,MAAM,CAAC,CAAC+B,WAAW,CAAC,CAAC,CAExB,GAAIC,YAAY,CAAE,CAChBvC,OAAO,CAACL,KAAK,CAAC,oCAAoC2C,WAAW,CAACrB,IAAI,IAAI,CAAEsB,YAAY,CAAC,CACrF,MAAO,CAAE5C,KAAK,CAAE4C,YAAa,CAAC,CAChC,CACF,CAEA,MAAO,CAAE7C,IAAK,CAAC,CACjB,CAAC,CAED;AACA,KAAM,CAAA8C,aAAaA,CAACtC,EAAE,CAAEuC,OAAO,CAAE,CAC/B,KAAM,CAAE/C,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,UAAU,CAAC,CAChB8C,MAAM,CAACD,OAAO,CAAC,CACftC,EAAE,CAAC,IAAI,CAAED,EAAE,CAAC,CACZL,MAAM,CAAC,CAAC,CACRO,MAAM,CAAC,CAAC,CAEX,GAAIT,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,CAAEA,KAAM,CAAC,CAClB,CAEA,MAAO,CAAED,IAAK,CAAC,CACjB,CAAC,CAED;AACA,KAAM,CAAAiD,aAAaA,CAACzC,EAAE,CAAE,CACtB;AACA;AACA,KAAM,CAAER,IAAI,CAAEkD,QAAQ,CAAEjD,KAAK,CAAEkD,aAAc,CAAC,CAAG,KAAM,CAAAtD,QAAQ,CAC5DK,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,IAAI,CAAC,CACZM,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CAEvB,GAAI2C,aAAa,CAAE,CACjB7C,OAAO,CAACL,KAAK,CAAC,uCAAuC,CAAEkD,aAAa,CAAC,CACrE,MAAO,CAAElD,KAAK,CAAEkD,aAAc,CAAC,CACjC,CAEA;AACA,IAAK,KAAM,CAAAC,OAAO,GAAI,CAAAF,QAAQ,CAAE,CAC9B,KAAM,CAAEjD,KAAK,CAAEoD,UAAW,CAAC,CAAG,KAAM,CAAAxD,QAAQ,CACzCK,IAAI,CAAC,cAAc,CAAC,CACpBoD,MAAM,CAAC,CAAC,CACR7C,EAAE,CAAC,YAAY,CAAE2C,OAAO,CAAC5C,EAAE,CAAC,CAE/B,GAAI6C,UAAU,CAAE,CACd/C,OAAO,CAACL,KAAK,CAAC,8BAA8B,CAAEoD,UAAU,CAAC,CACzD,MAAO,CAAEpD,KAAK,CAAEoD,UAAW,CAAC,CAC9B,CACF,CAEA;AACA,KAAM,CAAEpD,KAAK,CAAEsD,kBAAmB,CAAC,CAAG,KAAM,CAAA1D,QAAQ,CACjDK,IAAI,CAAC,UAAU,CAAC,CAChBoD,MAAM,CAAC,CAAC,CACR7C,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CAEvB,GAAI+C,kBAAkB,CAAE,CACtBjD,OAAO,CAACL,KAAK,CAAC,0BAA0B,CAAEsD,kBAAkB,CAAC,CAC7D,MAAO,CAAEtD,KAAK,CAAEsD,kBAAmB,CAAC,CACtC,CAEA;AACA,KAAM,CAAEtD,KAAK,CAAEuD,kBAAmB,CAAC,CAAG,KAAM,CAAA3D,QAAQ,CACjDK,IAAI,CAAC,kBAAkB,CAAC,CACxBoD,MAAM,CAAC,CAAC,CACR7C,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CAEvB,GAAIgD,kBAAkB,CAAE,CACtBlD,OAAO,CAACL,KAAK,CAAC,uCAAuC,CAAEuD,kBAAkB,CAAC,CAC1E,MAAO,CAAEvD,KAAK,CAAEuD,kBAAmB,CAAC,CACtC,CAEA;AACA,KAAM,CAAEvD,KAAK,CAAEwD,mBAAoB,CAAC,CAAG,KAAM,CAAA5D,QAAQ,CAClDK,IAAI,CAAC,kBAAkB,CAAC,CACxBoD,MAAM,CAAC,CAAC,CACR7C,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CAEvB,GAAIiD,mBAAmB,CAAE,CACvBnD,OAAO,CAACL,KAAK,CAAC,kCAAkC,CAAEwD,mBAAmB,CAAC,CACtE,MAAO,CAAExD,KAAK,CAAEwD,mBAAoB,CAAC,CACvC,CAEA;AACA,KAAM,CAAExD,KAAK,CAAEyD,kBAAmB,CAAC,CAAG,KAAM,CAAA7D,QAAQ,CACjDK,IAAI,CAAC,UAAU,CAAC,CAChBoD,MAAM,CAAC,CAAC,CACR7C,EAAE,CAAC,IAAI,CAAED,EAAE,CAAC,CAEf,GAAIkD,kBAAkB,CAAE,CACtBpD,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEyD,kBAAkB,CAAC,CAC5D,MAAO,CAAEzD,KAAK,CAAEyD,kBAAmB,CAAC,CACtC,CAEA,MAAO,CAAEC,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAC,kBAAkBA,CAACpD,EAAE,CAAE,CAC3B;AACA,KAAM,CAAER,IAAI,CAAE6D,OAAO,CAAE5D,KAAK,CAAE6D,YAAa,CAAC,CAAG,KAAM,CAAAjE,QAAQ,CAC1DK,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,IAAI,CAAED,EAAE,CAAC,CACZE,MAAM,CAAC,CAAC,CAEX,GAAIoD,YAAY,CAAE,CAChBxD,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAE6D,YAAY,CAAC,CACtD,MAAO,CAAE7D,KAAK,CAAE6D,YAAa,CAAC,CAChC,CAEA;AACA,KAAM,CAAE9D,IAAI,CAAE+D,QAAQ,CAAE9D,KAAK,CAAEa,aAAc,CAAC,CAAG,KAAM,CAAAjB,QAAQ,CAC5DK,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CACpBE,MAAM,CAAC,CAAC,CAEX,GAAII,aAAa,EAAIA,aAAa,CAACkD,IAAI,GAAK,UAAU,CAAE,CAAE;AACxD1D,OAAO,CAACL,KAAK,CAAC,kCAAkC,CAAEa,aAAa,CAAC,CAChE,MAAO,CAAEb,KAAK,CAAEa,aAAc,CAAC,CACjC,CAEA;AACA,KAAM,CAAEd,IAAI,CAAEkD,QAAQ,CAAEjD,KAAK,CAAEkD,aAAc,CAAC,CAAG,KAAM,CAAAtD,QAAQ,CAC5DK,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CACpBJ,KAAK,CAAC,UAAU,CAAE,CAAEC,SAAS,CAAE,IAAK,CAAC,CAAC,CAEzC,GAAI8C,aAAa,CAAE,CACjB7C,OAAO,CAACL,KAAK,CAAC,0BAA0B,CAAEkD,aAAa,CAAC,CACxD,MAAO,CAAElD,KAAK,CAAEkD,aAAc,CAAC,CACjC,CAEA;AACA,KAAM,CAAAc,iBAAiB,CAAG,CAAC,CAAC,CAE5B,IAAK,KAAM,CAAAb,OAAO,GAAI,CAAAF,QAAQ,CAAE,CAC9B,KAAM,CAAElD,IAAI,CAAEyB,KAAK,CAAExB,KAAK,CAAEoD,UAAW,CAAC,CAAG,KAAM,CAAAxD,QAAQ,CACtDK,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,YAAY,CAAE2C,OAAO,CAAC5C,EAAE,CAAC,CAC5BJ,KAAK,CAAC,UAAU,CAAE,CAAEC,SAAS,CAAE,IAAK,CAAC,CAAC,CAEzC,GAAIgD,UAAU,CAAE,CACd/C,OAAO,CAACL,KAAK,CAAC,8BAA8B,CAAEoD,UAAU,CAAC,CACzD,MAAO,CAAEpD,KAAK,CAAEoD,UAAW,CAAC,CAC9B,CAEA;AACA,KAAM,CAAAa,gBAAgB,CAAGzC,KAAK,CAAC0C,GAAG,CAACC,IAAI,GAAK,CAC1C5D,EAAE,CAAE4D,IAAI,CAAC5D,EAAE,CACX6D,QAAQ,CAAED,IAAI,CAACE,QAAQ,CACvBC,OAAO,CAAEH,IAAI,CAACI,IAAI,CAClBC,GAAG,CAAEL,IAAI,CAACM,QAAQ,CAClBC,cAAc,CAAEP,IAAI,CAACQ,UAAU,CAC/BC,KAAK,CAAET,IAAI,CAACU,WACd,CAAC,CAAC,CAAC,CAEHb,iBAAiB,CAACb,OAAO,CAAC2B,WAAW,CAAC,CAAG,CACvCvD,MAAM,CAAE4B,OAAO,CAAC5B,MAAM,CACtBC,KAAK,CAAEyC,gBACT,CAAC,CACH,CAEA;AACA,KAAM,CAAElE,IAAI,CAAEgF,eAAe,CAAE/E,KAAK,CAAE4C,YAAa,CAAC,CAAG,KAAM,CAAAhD,QAAQ,CAClEK,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,YAAY,CAAED,EAAE,CAAC,CAEvB,GAAIqC,YAAY,CAAE,CAChBvC,OAAO,CAACL,KAAK,CAAC,uCAAuC,CAAE4C,YAAY,CAAC,CACpE,MAAO,CAAE5C,KAAK,CAAE4C,YAAa,CAAC,CAChC,CAEA;AACA,KAAM,CAAAoC,eAAe,CAAG,CAAC,CAAC,CAE1BD,eAAe,CAACE,OAAO,CAACC,OAAO,EAAI,CACjCF,eAAe,CAACE,OAAO,CAAC5D,IAAI,CAAC,CAAG4D,OAAO,CAACnF,IAAI,CAC9C,CAAC,CAAC,CAEF;AACA,KAAM,CAAAoF,eAAe,CAAG,CACtB5E,EAAE,CAAEqD,OAAO,CAACrD,EAAE,CACd6E,IAAI,CAAExB,OAAO,CAACwB,IAAI,CAClBC,MAAM,CAAEzB,OAAO,CAACyB,MAAM,CACtBC,WAAW,CAAE1B,OAAO,CAAC0B,WAAW,CAChChE,IAAI,CAAEsC,OAAO,CAACtC,IAAI,CAClBiE,SAAS,CAAE3B,OAAO,CAAC4B,UAAU,CAC7BzE,QAAQ,CAAE6C,OAAO,CAAC7C,QAAQ,CAC1B0E,SAAS,CAAE7B,OAAO,CAAC8B,UAAU,CAC7BC,SAAS,CAAE/B,OAAO,CAACgC,UAAU,CAC7BC,MAAM,CAAE,CACNjC,OAAO,CAAE,CACPrD,EAAE,CAAEqD,OAAO,CAACrD,EAAE,CACd6E,IAAI,CAAExB,OAAO,CAACwB,IAAI,CAClBC,MAAM,CAAEzB,OAAO,CAACyB,MAAM,CACtBS,YAAY,CAAElC,OAAO,CAAC8B,UAAU,CAChCK,aAAa,CAAEnC,OAAO,CAACgC,UAAU,CACjCI,MAAM,CAAE,cACV,CAAC,CACD/C,QAAQ,CAAEe,iBAAiB,CAC3BiC,gBAAgB,CAAEjB,eAAe,CACjCkB,aAAa,CAAEpC,QAAQ,CAAG,CACxBqC,KAAK,CAAErC,QAAQ,CAAC/C,QAAQ,CACxBqF,cAAc,CAAEtC,QAAQ,CAAC9C,aAAa,CACtCqF,cAAc,CAAEvC,QAAQ,CAAC7C,cAAc,CACvCqF,uBAAuB,CAAExC,QAAQ,CAAC5C,iBAAiB,CACnDqF,aAAa,CAAEzC,QAAQ,CAAC3C,cAC1B,CAAC,CAAG,CACFgF,KAAK,CAAE,KAAK,CACZC,cAAc,CAAE,OAAO,CACvBC,cAAc,CAAE,CAAC,CACjBC,uBAAuB,CAAE,IAAI,CAC7BC,aAAa,CAAE,KACjB,CACF,CACF,CAAC,CAED,MAAO,CAAExG,IAAI,CAAEoF,eAAgB,CAAC,CAClC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}