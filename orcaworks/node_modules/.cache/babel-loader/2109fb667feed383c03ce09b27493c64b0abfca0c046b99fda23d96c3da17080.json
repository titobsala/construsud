{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/titob/OneDrive - Ensino Lus\\xF3fona/EXO/repo-tito/construsud/orcaworks/src/context/BudgetContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport initialBudget from '../data/initialBudget';\nimport { projectService } from '../services/projectService';\nimport { budgetService } from '../services/budgetService';\nimport { useAuth } from './AuthContext';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetContext = /*#__PURE__*/createContext();\nexport const useBudget = () => {\n  _s();\n  return useContext(BudgetContext);\n};\n_s(useBudget, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const BudgetProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(null);\n  const [budget, setBudget] = useState({\n    project: {\n      name: 'Nenhum Projeto Selecionado',\n      client: '',\n      date_created: new Date().toISOString(),\n      last_modified: new Date().toISOString(),\n      status: \"em_andamento\"\n    },\n    chapters: {},\n    CONTROLE_INTERNO: {\n      VENDA: {\n        header: \"Venda\",\n        items: [{\n          Custo_Seco_Euro: 0,\n          Custo_Total_Euro: 0,\n          Margem_Percentual: 30.00,\n          Venda_Euro: 0,\n          Margem_Euro: 0\n        }]\n      },\n      DIVERSOS: {\n        header: \"Diversos\",\n        items: [{\n          Alimentacao_Euro: 0,\n          Passagens_Euro: 0,\n          Outros_Euro: 0\n        }]\n      },\n      SUB_EMPREITEIROS: {\n        header: \"Sub-Empreiteiros\",\n        items: [{\n          Fornecedor_1_Euro: 0,\n          Total_Euro: 0\n        }]\n      },\n      AMORTIZACOES: {\n        header: \"Amortizações\",\n        items: [{\n          tipo: \"Material\",\n          Total_Euro: 0\n        }]\n      }\n    },\n    configuracoes: {\n      moeda: 'EUR',\n      formato_numero: 'PT-PT',\n      casas_decimais: 2,\n      mostrar_todos_capitulos: true,\n      margem_padrao: 30.00\n    }\n  });\n  const [activeChapter, setActiveChapter] = useState('CAR 1');\n  const [showEditItemModal, setShowEditItemModal] = useState(false);\n  const [showNewChapterModal, setShowNewChapterModal] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user projects when user is authenticated\n  useEffect(() => {\n    const loadProjects = async () => {\n      if (!user) {\n        setProjects([]);\n        setBudget(initialBudget);\n        setLoading(false);\n        return;\n      }\n      setLoading(true);\n      try {\n        const {\n          data,\n          error\n        } = await projectService.getProjects();\n        if (error) {\n          console.error('Error loading projects:', error);\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n        if (data && data.length > 0) {\n          const projectsWithActive = data.map((project, index) => ({\n            ...project,\n            active: index === 0 // First project is active by default\n          }));\n          setProjects(projectsWithActive);\n          setActiveProject(projectsWithActive[0].id);\n\n          // Load the first project's budget\n          await loadProjectBudget(projectsWithActive[0].id);\n        } else {\n          // If no projects, use default budget\n          setProjects([]);\n          setBudget(initialBudget);\n        }\n      } catch (err) {\n        console.error('Unexpected error loading projects:', err);\n        setError('Failed to load projects. Please try again later.');\n      }\n      setLoading(false);\n    };\n    loadProjects();\n  }, [user]);\n\n  // Setup subscription to update projects list in real-time\n  useEffect(() => {\n    if (!user) return;\n\n    // Subscribe to projects table changes for the current user\n    const subscription = supabase.channel('public:projects').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'projects',\n      filter: `user_id=eq.${user.id}`\n    }, async payload => {\n      console.log('Projects change received!', payload);\n\n      // Reload the projects\n      const {\n        data\n      } = await projectService.getProjects();\n      if (data) {\n        const projectsWithActive = data.map(project => ({\n          ...project,\n          active: project.id === activeProject\n        }));\n        setProjects(projectsWithActive);\n      }\n    }).subscribe();\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [user, activeProject]);\n\n  // Load complete project data including budget\n  const loadProjectBudget = async projectId => {\n    try {\n      const {\n        data,\n        error\n      } = await projectService.getCompleteProject(projectId);\n      if (error) {\n        console.error('Error loading project budget:', error);\n        setError(error.message);\n        return;\n      }\n      setBudget(data.budget);\n\n      // Set first chapter as active\n      const chapterKeys = Object.keys(data.budget.chapters);\n      if (chapterKeys.length > 0) {\n        setActiveChapter(chapterKeys[0]);\n      }\n    } catch (err) {\n      console.error('Unexpected error loading project budget:', err);\n      setError('Failed to load project data. Please try again later.');\n    }\n  };\n\n  // Calculate item value\n  const calculateItemValue = (qty, unitPrice) => {\n    return Number((qty * unitPrice).toFixed(2));\n  };\n\n  // Calculate chapter total\n  const calculateChapterTotal = chapterKey => {\n    var _budget$chapters$chap;\n    if (!((_budget$chapters$chap = budget.chapters[chapterKey]) !== null && _budget$chapters$chap !== void 0 && _budget$chapters$chap.items)) return 0;\n    return budget.chapters[chapterKey].items.reduce((sum, item) => sum + item.VALOR, 0);\n  };\n\n  // Calculate total material costs\n  const calculateTotalMaterialCost = () => {\n    return Object.keys(budget.chapters).reduce((sum, chapterKey) => sum + calculateChapterTotal(chapterKey), 0);\n  };\n\n  // Recalculate all budget values\n  const recalculateBudget = () => {\n    // Recalculate each item value\n    const updatedChapters = {\n      ...budget.chapters\n    };\n    Object.keys(updatedChapters).forEach(chapterKey => {\n      updatedChapters[chapterKey].items = updatedChapters[chapterKey].items.map(item => ({\n        ...item,\n        VALOR: calculateItemValue(item.QTD, item.VALOR_UNITARIO)\n      }));\n    });\n\n    // Recalculate total costs\n    const custoSeco = calculateTotalMaterialCost();\n\n    // Calculate additional costs\n    const diversos = budget.CONTROLE_INTERNO.DIVERSOS.items[0];\n    const diversosTotal = diversos.Alimentacao_Euro + diversos.Passagens_Euro + diversos.Outros_Euro;\n    const subEmpreiteirosTotal = budget.CONTROLE_INTERNO.SUB_EMPREITEIROS.items[0].Total_Euro;\n    const amortizacoesTotal = budget.CONTROLE_INTERNO.AMORTIZACOES.items.reduce((sum, item) => sum + item.Total_Euro, 0);\n\n    // Calculate total cost\n    const custoTotal = custoSeco + diversosTotal + subEmpreiteirosTotal + amortizacoesTotal;\n\n    // Calculate margin and sale value\n    const margemPercentual = budget.CONTROLE_INTERNO.VENDA.items[0].Margem_Percentual;\n    const vendaEuro = custoTotal / (1 - margemPercentual / 100);\n    const margemEuro = vendaEuro - custoTotal;\n\n    // Update internal control values\n    const updatedControleInterno = {\n      ...budget.CONTROLE_INTERNO\n    };\n    updatedControleInterno.VENDA.items[0] = {\n      ...updatedControleInterno.VENDA.items[0],\n      Custo_Seco_Euro: Number(custoSeco.toFixed(2)),\n      Custo_Total_Euro: Number(custoTotal.toFixed(2)),\n      Venda_Euro: Number(vendaEuro.toFixed(2)),\n      Margem_Euro: Number(margemEuro.toFixed(2))\n    };\n\n    // Update budget state\n    setBudget({\n      ...budget,\n      chapters: updatedChapters,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n\n    // If connected to Supabase, update internal control data\n    if (user && activeProject) {\n      budgetService.updateInternalControl(activeProject, 'VENDA', updatedControleInterno.VENDA);\n    }\n  };\n\n  // Add new item to chapter\n  const addItem = async (chapterKey, newItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const localItemId = `${chapterKey.split(' ')[1]}-${chapter.items.length + 1}`;\n    const calculatedValue = calculateItemValue(newItem.QTD, newItem.VALOR_UNITARIO);\n    const localNewItem = {\n      ...newItem,\n      id: localItemId,\n      VALOR: calculatedValue\n    };\n    const updatedItems = [...chapter.items, localNewItem];\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the chapter ID\n        const {\n          data: chapters,\n          error: chaptersError\n        } = await supabase.from('chapters').select('id').eq('project_id', activeProject).eq('chapter_key', chapterKey).single();\n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n\n        // Add item to database\n        const {\n          data,\n          error\n        } = await budgetService.createItem(chapters.id, newItem);\n        if (error) {\n          console.error('Error adding item to database:', error);\n          // Could revert local state here if needed\n          return;\n        }\n\n        // Update local state with server generated ID if needed\n        // Currently using the same item ID format\n      } catch (err) {\n        console.error('Unexpected error adding item:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Update existing item\n  const updateItem = async (chapterKey, itemId, updatedItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    if (itemIndex === -1) return;\n    const calculatedValue = calculateItemValue(updatedItem.QTD, updatedItem.VALOR_UNITARIO);\n    const updatedItems = [...chapter.items];\n    updatedItems[itemIndex] = {\n      ...updatedItems[itemIndex],\n      ...updatedItem,\n      VALOR: calculatedValue\n    };\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const {\n          data: chapters,\n          error: chaptersError\n        } = await supabase.from('chapters').select('id').eq('project_id', activeProject).eq('chapter_key', chapterKey).single();\n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        const {\n          data: items,\n          error: itemsError\n        } = await supabase.from('budget_items').select('id').eq('chapter_id', chapters.id).eq('position', itemIndex) // Using position to match\n        .single();\n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n\n        // Update item in database\n        const {\n          error\n        } = await budgetService.updateItem(items.id, updatedItem);\n        if (error) {\n          console.error('Error updating item in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating item:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Delete item\n  const deleteItem = async (chapterKey, itemId) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    if (itemIndex === -1) return;\n    const updatedItems = chapter.items.filter(item => item.id !== itemId);\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const {\n          data: chapters,\n          error: chaptersError\n        } = await supabase.from('chapters').select('id').eq('project_id', activeProject).eq('chapter_key', chapterKey).single();\n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        const {\n          data: items,\n          error: itemsError\n        } = await supabase.from('budget_items').select('id').eq('chapter_id', chapters.id).eq('position', itemIndex) // Using position to match\n        .single();\n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n\n        // Delete item from database\n        const {\n          error\n        } = await budgetService.deleteItem(items.id);\n        if (error) {\n          console.error('Error deleting item from database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error deleting item:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Add new chapter\n  const addChapter = async (chapterKey, header) => {\n    if (budget.chapters[chapterKey]) return false; // Chapter already exists\n\n    // Update local state first for immediate UI feedback\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        header,\n        items: []\n      }\n    };\n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const {\n          error\n        } = await budgetService.createChapter(activeProject, chapterKey, header);\n        if (error) {\n          console.error('Error adding chapter to database:', error);\n          // Could revert local state here if needed\n          return false;\n        }\n      } catch (err) {\n        console.error('Unexpected error adding chapter:', err);\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Update margin percentage\n  const updateMarginPercentage = async percentage => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = {\n      ...budget.CONTROLE_INTERNO\n    };\n    updatedControleInterno.VENDA.items[0].Margem_Percentual = percentage;\n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const {\n          error\n        } = await budgetService.updateInternalControl(activeProject, 'VENDA', updatedControleInterno.VENDA);\n        if (error) {\n          console.error('Error updating margin in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating margin:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Update diverse costs\n  const updateDiverseCosts = async diverseCosts => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = {\n      ...budget.CONTROLE_INTERNO\n    };\n    updatedControleInterno.DIVERSOS.items[0] = {\n      ...updatedControleInterno.DIVERSOS.items[0],\n      ...diverseCosts\n    };\n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n\n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const {\n          error\n        } = await budgetService.updateInternalControl(activeProject, 'DIVERSOS', updatedControleInterno.DIVERSOS);\n        if (error) {\n          console.error('Error updating diverse costs in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating diverse costs:', err);\n      }\n    }\n    recalculateBudget();\n  };\n\n  // Format currency\n  const formatCurrency = value => {\n    var _budget$configuracoes, _budget$configuracoes2, _budget$configuracoes3;\n    const currency = (budget === null || budget === void 0 ? void 0 : (_budget$configuracoes = budget.configuracoes) === null || _budget$configuracoes === void 0 ? void 0 : _budget$configuracoes.moeda) || 'EUR';\n    const locale = (budget === null || budget === void 0 ? void 0 : (_budget$configuracoes2 = budget.configuracoes) === null || _budget$configuracoes2 === void 0 ? void 0 : _budget$configuracoes2.formato_numero) || 'pt-PT';\n    const decimals = (budget === null || budget === void 0 ? void 0 : (_budget$configuracoes3 = budget.configuracoes) === null || _budget$configuracoes3 === void 0 ? void 0 : _budget$configuracoes3.casas_decimais) || 2;\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: decimals\n    }).format(value);\n  };\n\n  // Add new project\n  const addProject = async projectData => {\n    if (!user) return null;\n    try {\n      // Add user_id to project data\n      const projectPayload = {\n        ...projectData,\n        user_id: user.id\n      };\n      const {\n        data,\n        error\n      } = await projectService.createProject(projectPayload);\n      if (error) {\n        console.error('Error creating project:', error);\n        setError(error.message);\n        return null;\n      }\n\n      // Add the project to local state\n      const newProject = {\n        ...data,\n        active: true // Make the new project active\n      };\n\n      // Update other projects to be inactive\n      const updatedProjects = projects.map(project => ({\n        ...project,\n        active: false\n      }));\n      setProjects([...updatedProjects, newProject]);\n      setActiveProject(newProject.id);\n\n      // Load the new project's budget\n      await loadProjectBudget(newProject.id);\n      return newProject.id;\n    } catch (err) {\n      console.error('Unexpected error creating project:', err);\n      setError('Failed to create project. Please try again later.');\n      return null;\n    }\n  };\n\n  // Set active project\n  const setActiveProjectById = async projectId => {\n    if (!projectId) return;\n    setActiveProject(projectId);\n\n    // Update projects active state\n    const updatedProjects = projects.map(project => ({\n      ...project,\n      active: project.id === projectId\n    }));\n    setProjects(updatedProjects);\n\n    // Load the selected project's budget\n    await loadProjectBudget(projectId);\n  };\n  return /*#__PURE__*/_jsxDEV(BudgetContext.Provider, {\n    value: {\n      // Budget data and operations\n      budget,\n      activeChapter,\n      setActiveChapter,\n      showEditItemModal,\n      setShowEditItemModal,\n      showNewChapterModal,\n      setShowNewChapterModal,\n      currentItem,\n      setCurrentItem,\n      addItem,\n      updateItem,\n      deleteItem,\n      addChapter,\n      calculateChapterTotal,\n      calculateTotalMaterialCost,\n      updateMarginPercentage,\n      updateDiverseCosts,\n      formatCurrency,\n      recalculateBudget,\n      // Project management\n      projects,\n      activeProject,\n      addProject,\n      setActiveProjectById,\n      // Status\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 641,\n    columnNumber: 5\n  }, this);\n};\n_s2(BudgetProvider, \"FcwnzRzOumtUo2Vb8qO5tiPVSo0=\", false, function () {\n  return [useAuth];\n});\n_c = BudgetProvider;\nexport default BudgetContext;\nvar _c;\n$RefreshReg$(_c, \"BudgetProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","initialBudget","projectService","budgetService","useAuth","supabase","jsxDEV","_jsxDEV","BudgetContext","useBudget","_s","BudgetProvider","children","_s2","user","projects","setProjects","activeProject","setActiveProject","budget","setBudget","project","name","client","date_created","Date","toISOString","last_modified","status","chapters","CONTROLE_INTERNO","VENDA","header","items","Custo_Seco_Euro","Custo_Total_Euro","Margem_Percentual","Venda_Euro","Margem_Euro","DIVERSOS","Alimentacao_Euro","Passagens_Euro","Outros_Euro","SUB_EMPREITEIROS","Fornecedor_1_Euro","Total_Euro","AMORTIZACOES","tipo","configuracoes","moeda","formato_numero","casas_decimais","mostrar_todos_capitulos","margem_padrao","activeChapter","setActiveChapter","showEditItemModal","setShowEditItemModal","showNewChapterModal","setShowNewChapterModal","currentItem","setCurrentItem","loading","setLoading","error","setError","loadProjects","data","getProjects","console","message","length","projectsWithActive","map","index","active","id","loadProjectBudget","err","subscription","channel","on","event","schema","table","filter","payload","log","subscribe","unsubscribe","projectId","getCompleteProject","chapterKeys","Object","keys","calculateItemValue","qty","unitPrice","Number","toFixed","calculateChapterTotal","chapterKey","_budget$chapters$chap","reduce","sum","item","VALOR","calculateTotalMaterialCost","recalculateBudget","updatedChapters","forEach","QTD","VALOR_UNITARIO","custoSeco","diversos","diversosTotal","subEmpreiteirosTotal","amortizacoesTotal","custoTotal","margemPercentual","vendaEuro","margemEuro","updatedControleInterno","updateInternalControl","addItem","newItem","chapter","localItemId","split","calculatedValue","localNewItem","updatedItems","chaptersError","from","select","eq","single","createItem","updateItem","itemId","updatedItem","itemIndex","findIndex","itemsError","deleteItem","addChapter","createChapter","updateMarginPercentage","percentage","updateDiverseCosts","diverseCosts","formatCurrency","value","_budget$configuracoes","_budget$configuracoes2","_budget$configuracoes3","currency","locale","decimals","Intl","NumberFormat","style","minimumFractionDigits","format","addProject","projectData","projectPayload","user_id","createProject","newProject","updatedProjects","setActiveProjectById","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/titob/OneDrive - Ensino Lusófona/EXO/repo-tito/construsud/orcaworks/src/context/BudgetContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport initialBudget from '../data/initialBudget';\nimport { projectService } from '../services/projectService';\nimport { budgetService } from '../services/budgetService';\nimport { useAuth } from './AuthContext';\nimport { supabase } from '../lib/supabase';\n\nconst BudgetContext = createContext();\n\nexport const useBudget = () => useContext(BudgetContext);\n\nexport const BudgetProvider = ({ children }) => {\n  const { user } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(null);\n  const [budget, setBudget] = useState({\n    project: {\n      name: 'Nenhum Projeto Selecionado',\n      client: '',\n      date_created: new Date().toISOString(),\n      last_modified: new Date().toISOString(),\n      status: \"em_andamento\"\n    },\n    chapters: {},\n    CONTROLE_INTERNO: {\n      VENDA: {\n        header: \"Venda\",\n        items: [\n          {\n            Custo_Seco_Euro: 0,\n            Custo_Total_Euro: 0,\n            Margem_Percentual: 30.00,\n            Venda_Euro: 0,\n            Margem_Euro: 0\n          }\n        ]\n      },\n      DIVERSOS: {\n        header: \"Diversos\",\n        items: [{ Alimentacao_Euro: 0, Passagens_Euro: 0, Outros_Euro: 0 }]\n      },\n      SUB_EMPREITEIROS: {\n        header: \"Sub-Empreiteiros\",\n        items: [{ Fornecedor_1_Euro: 0, Total_Euro: 0 }]\n      },\n      AMORTIZACOES: {\n        header: \"Amortizações\",\n        items: [{ tipo: \"Material\", Total_Euro: 0 }]\n      }\n    },\n    configuracoes: {\n      moeda: 'EUR',\n      formato_numero: 'PT-PT',\n      casas_decimais: 2,\n      mostrar_todos_capitulos: true,\n      margem_padrao: 30.00\n    }\n  });\n  const [activeChapter, setActiveChapter] = useState('CAR 1');\n  const [showEditItemModal, setShowEditItemModal] = useState(false);\n  const [showNewChapterModal, setShowNewChapterModal] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Load user projects when user is authenticated\n  useEffect(() => {\n    const loadProjects = async () => {\n      if (!user) {\n        setProjects([]);\n        setBudget(initialBudget);\n        setLoading(false);\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        const { data, error } = await projectService.getProjects();\n        \n        if (error) {\n          console.error('Error loading projects:', error);\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n        \n        if (data && data.length > 0) {\n          const projectsWithActive = data.map((project, index) => ({\n            ...project,\n            active: index === 0 // First project is active by default\n          }));\n          \n          setProjects(projectsWithActive);\n          setActiveProject(projectsWithActive[0].id);\n          \n          // Load the first project's budget\n          await loadProjectBudget(projectsWithActive[0].id);\n        } else {\n          // If no projects, use default budget\n          setProjects([]);\n          setBudget(initialBudget);\n        }\n      } catch (err) {\n        console.error('Unexpected error loading projects:', err);\n        setError('Failed to load projects. Please try again later.');\n      }\n      \n      setLoading(false);\n    };\n    \n    loadProjects();\n  }, [user]);\n  \n  // Setup subscription to update projects list in real-time\n  useEffect(() => {\n    if (!user) return;\n    \n    // Subscribe to projects table changes for the current user\n    const subscription = supabase\n      .channel('public:projects')\n      .on('postgres_changes', { \n        event: '*', \n        schema: 'public', \n        table: 'projects',\n        filter: `user_id=eq.${user.id}`\n      }, async (payload) => {\n        console.log('Projects change received!', payload);\n        \n        // Reload the projects\n        const { data } = await projectService.getProjects();\n        if (data) {\n          const projectsWithActive = data.map(project => ({\n            ...project,\n            active: project.id === activeProject\n          }));\n          \n          setProjects(projectsWithActive);\n        }\n      })\n      .subscribe();\n    \n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [user, activeProject]);\n  \n  // Load complete project data including budget\n  const loadProjectBudget = async (projectId) => {\n    try {\n      const { data, error } = await projectService.getCompleteProject(projectId);\n      \n      if (error) {\n        console.error('Error loading project budget:', error);\n        setError(error.message);\n        return;\n      }\n      \n      setBudget(data.budget);\n      \n      // Set first chapter as active\n      const chapterKeys = Object.keys(data.budget.chapters);\n      if (chapterKeys.length > 0) {\n        setActiveChapter(chapterKeys[0]);\n      }\n      \n    } catch (err) {\n      console.error('Unexpected error loading project budget:', err);\n      setError('Failed to load project data. Please try again later.');\n    }\n  };\n\n  // Calculate item value\n  const calculateItemValue = (qty, unitPrice) => {\n    return Number((qty * unitPrice).toFixed(2));\n  };\n\n  // Calculate chapter total\n  const calculateChapterTotal = (chapterKey) => {\n    if (!budget.chapters[chapterKey]?.items) return 0;\n    return budget.chapters[chapterKey].items.reduce(\n      (sum, item) => sum + item.VALOR,\n      0\n    );\n  };\n\n  // Calculate total material costs\n  const calculateTotalMaterialCost = () => {\n    return Object.keys(budget.chapters).reduce(\n      (sum, chapterKey) => sum + calculateChapterTotal(chapterKey),\n      0\n    );\n  };\n\n  // Recalculate all budget values\n  const recalculateBudget = () => {\n    // Recalculate each item value\n    const updatedChapters = { ...budget.chapters };\n    \n    Object.keys(updatedChapters).forEach(chapterKey => {\n      updatedChapters[chapterKey].items = updatedChapters[chapterKey].items.map(item => ({\n        ...item,\n        VALOR: calculateItemValue(item.QTD, item.VALOR_UNITARIO)\n      }));\n    });\n    \n    // Recalculate total costs\n    const custoSeco = calculateTotalMaterialCost();\n    \n    // Calculate additional costs\n    const diversos = budget.CONTROLE_INTERNO.DIVERSOS.items[0];\n    const diversosTotal = \n      diversos.Alimentacao_Euro + \n      diversos.Passagens_Euro + \n      diversos.Outros_Euro;\n    \n    const subEmpreiteirosTotal = budget.CONTROLE_INTERNO.SUB_EMPREITEIROS.items[0].Total_Euro;\n    \n    const amortizacoesTotal = budget.CONTROLE_INTERNO.AMORTIZACOES.items.reduce(\n      (sum, item) => sum + item.Total_Euro, \n      0\n    );\n    \n    // Calculate total cost\n    const custoTotal = custoSeco + diversosTotal + subEmpreiteirosTotal + amortizacoesTotal;\n    \n    // Calculate margin and sale value\n    const margemPercentual = budget.CONTROLE_INTERNO.VENDA.items[0].Margem_Percentual;\n    const vendaEuro = custoTotal / (1 - (margemPercentual / 100));\n    const margemEuro = vendaEuro - custoTotal;\n    \n    // Update internal control values\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.VENDA.items[0] = {\n      ...updatedControleInterno.VENDA.items[0],\n      Custo_Seco_Euro: Number(custoSeco.toFixed(2)),\n      Custo_Total_Euro: Number(custoTotal.toFixed(2)),\n      Venda_Euro: Number(vendaEuro.toFixed(2)),\n      Margem_Euro: Number(margemEuro.toFixed(2))\n    };\n    \n    // Update budget state\n    setBudget({\n      ...budget,\n      chapters: updatedChapters,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, update internal control data\n    if (user && activeProject) {\n      budgetService.updateInternalControl(\n        activeProject, \n        'VENDA', \n        updatedControleInterno.VENDA\n      );\n    }\n  };\n\n  // Add new item to chapter\n  const addItem = async (chapterKey, newItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const localItemId = `${chapterKey.split(' ')[1]}-${chapter.items.length + 1}`;\n    const calculatedValue = calculateItemValue(newItem.QTD, newItem.VALOR_UNITARIO);\n    \n    const localNewItem = {\n      ...newItem,\n      id: localItemId,\n      VALOR: calculatedValue\n    };\n    \n    const updatedItems = [...chapter.items, localNewItem];\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the chapter ID\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        // Add item to database\n        const { data, error } = await budgetService.createItem(chapters.id, newItem);\n        \n        if (error) {\n          console.error('Error adding item to database:', error);\n          // Could revert local state here if needed\n          return;\n        }\n        \n        // Update local state with server generated ID if needed\n        // Currently using the same item ID format\n      } catch (err) {\n        console.error('Unexpected error adding item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Update existing item\n  const updateItem = async (chapterKey, itemId, updatedItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex === -1) return;\n    \n    const calculatedValue = calculateItemValue(updatedItem.QTD, updatedItem.VALOR_UNITARIO);\n    \n    const updatedItems = [...chapter.items];\n    updatedItems[itemIndex] = {\n      ...updatedItems[itemIndex],\n      ...updatedItem,\n      VALOR: calculatedValue\n    };\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        const { data: items, error: itemsError } = await supabase\n          .from('budget_items')\n          .select('id')\n          .eq('chapter_id', chapters.id)\n          .eq('position', itemIndex) // Using position to match\n          .single();\n        \n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n        \n        // Update item in database\n        const { error } = await budgetService.updateItem(items.id, updatedItem);\n        \n        if (error) {\n          console.error('Error updating item in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Delete item\n  const deleteItem = async (chapterKey, itemId) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex === -1) return;\n    \n    const updatedItems = chapter.items.filter(item => item.id !== itemId);\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        const { data: items, error: itemsError } = await supabase\n          .from('budget_items')\n          .select('id')\n          .eq('chapter_id', chapters.id)\n          .eq('position', itemIndex) // Using position to match\n          .single();\n        \n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n        \n        // Delete item from database\n        const { error } = await budgetService.deleteItem(items.id);\n        \n        if (error) {\n          console.error('Error deleting item from database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error deleting item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Add new chapter\n  const addChapter = async (chapterKey, header) => {\n    if (budget.chapters[chapterKey]) return false; // Chapter already exists\n    \n    // Update local state first for immediate UI feedback\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        header,\n        items: []\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.createChapter(activeProject, chapterKey, header);\n        \n        if (error) {\n          console.error('Error adding chapter to database:', error);\n          // Could revert local state here if needed\n          return false;\n        }\n      } catch (err) {\n        console.error('Unexpected error adding chapter:', err);\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // Update margin percentage\n  const updateMarginPercentage = async (percentage) => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.VENDA.items[0].Margem_Percentual = percentage;\n    \n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.updateInternalControl(\n          activeProject,\n          'VENDA',\n          updatedControleInterno.VENDA\n        );\n        \n        if (error) {\n          console.error('Error updating margin in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating margin:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Update diverse costs\n  const updateDiverseCosts = async (diverseCosts) => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.DIVERSOS.items[0] = {\n      ...updatedControleInterno.DIVERSOS.items[0],\n      ...diverseCosts\n    };\n    \n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.updateInternalControl(\n          activeProject,\n          'DIVERSOS',\n          updatedControleInterno.DIVERSOS\n        );\n        \n        if (error) {\n          console.error('Error updating diverse costs in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating diverse costs:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Format currency\n  const formatCurrency = (value) => {\n    const currency = budget?.configuracoes?.moeda || 'EUR';\n    const locale = budget?.configuracoes?.formato_numero || 'pt-PT';\n    const decimals = budget?.configuracoes?.casas_decimais || 2;\n    \n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: decimals\n    }).format(value);\n  };\n  \n  // Add new project\n  const addProject = async (projectData) => {\n    if (!user) return null;\n    \n    try {\n      // Add user_id to project data\n      const projectPayload = {\n        ...projectData,\n        user_id: user.id\n      };\n      \n      const { data, error } = await projectService.createProject(projectPayload);\n      \n      if (error) {\n        console.error('Error creating project:', error);\n        setError(error.message);\n        return null;\n      }\n      \n      // Add the project to local state\n      const newProject = {\n        ...data,\n        active: true // Make the new project active\n      };\n      \n      // Update other projects to be inactive\n      const updatedProjects = projects.map(project => ({\n        ...project,\n        active: false\n      }));\n      \n      setProjects([...updatedProjects, newProject]);\n      setActiveProject(newProject.id);\n      \n      // Load the new project's budget\n      await loadProjectBudget(newProject.id);\n      \n      return newProject.id;\n    } catch (err) {\n      console.error('Unexpected error creating project:', err);\n      setError('Failed to create project. Please try again later.');\n      return null;\n    }\n  };\n  \n  // Set active project\n  const setActiveProjectById = async (projectId) => {\n    if (!projectId) return;\n    \n    setActiveProject(projectId);\n    \n    // Update projects active state\n    const updatedProjects = projects.map(project => ({\n      ...project,\n      active: project.id === projectId\n    }));\n    \n    setProjects(updatedProjects);\n    \n    // Load the selected project's budget\n    await loadProjectBudget(projectId);\n  };\n\n  return (\n    <BudgetContext.Provider\n      value={{\n        // Budget data and operations\n        budget,\n        activeChapter,\n        setActiveChapter,\n        showEditItemModal,\n        setShowEditItemModal,\n        showNewChapterModal,\n        setShowNewChapterModal,\n        currentItem,\n        setCurrentItem,\n        addItem,\n        updateItem,\n        deleteItem,\n        addChapter,\n        calculateChapterTotal,\n        calculateTotalMaterialCost,\n        updateMarginPercentage,\n        updateDiverseCosts,\n        formatCurrency,\n        recalculateBudget,\n        \n        // Project management\n        projects,\n        activeProject,\n        addProject,\n        setActiveProjectById,\n        \n        // Status\n        loading,\n        error\n      }}\n    >\n      {children}\n    </BudgetContext.Provider>\n  );\n};\n\nexport default BudgetContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}