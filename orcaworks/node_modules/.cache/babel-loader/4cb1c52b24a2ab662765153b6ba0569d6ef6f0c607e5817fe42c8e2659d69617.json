{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import initialBudget from'../data/initialBudget';import{projectService}from'../services/projectService';import{budgetService}from'../services/budgetService';import{useAuth}from'./AuthContext';import{supabase}from'../lib/supabase';import{jsx as _jsx}from\"react/jsx-runtime\";const BudgetContext=/*#__PURE__*/createContext();export const useBudget=()=>useContext(BudgetContext);export const BudgetProvider=_ref=>{let{children}=_ref;const{user}=useAuth();const[projects,setProjects]=useState([]);const[activeProject,setActiveProject]=useState(null);const[budget,setBudget]=useState(initialBudget);const[activeChapter,setActiveChapter]=useState('CAR 1');const[showEditItemModal,setShowEditItemModal]=useState(false);const[showNewChapterModal,setShowNewChapterModal]=useState(false);const[currentItem,setCurrentItem]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Load user projects when user is authenticated\nuseEffect(()=>{const loadProjects=async()=>{if(!user){setProjects([]);setBudget(initialBudget);setLoading(false);return;}setLoading(true);try{const{data,error}=await projectService.getProjects();if(error){console.error('Error loading projects:',error);setError(error.message);setLoading(false);return;}if(data&&data.length>0){const projectsWithActive=data.map((project,index)=>({...project,active:index===0// First project is active by default\n}));setProjects(projectsWithActive);setActiveProject(projectsWithActive[0].id);// Load the first project's budget\nawait loadProjectBudget(projectsWithActive[0].id);}else{// If no projects, use default budget\nsetProjects([]);setBudget(initialBudget);}}catch(err){console.error('Unexpected error loading projects:',err);setError('Failed to load projects. Please try again later.');}setLoading(false);};loadProjects();},[user]);// Load complete project data including budget\nconst loadProjectBudget=async projectId=>{try{const{data,error}=await projectService.getCompleteProject(projectId);if(error){console.error('Error loading project budget:',error);setError(error.message);return;}setBudget(data.budget);// Set first chapter as active\nconst chapterKeys=Object.keys(data.budget.chapters);if(chapterKeys.length>0){setActiveChapter(chapterKeys[0]);}}catch(err){console.error('Unexpected error loading project budget:',err);setError('Failed to load project data. Please try again later.');}};// Calculate item value\nconst calculateItemValue=(qty,unitPrice)=>{return Number((qty*unitPrice).toFixed(2));};// Calculate chapter total\nconst calculateChapterTotal=chapterKey=>{var _budget$chapters$chap;if(!((_budget$chapters$chap=budget.chapters[chapterKey])!==null&&_budget$chapters$chap!==void 0&&_budget$chapters$chap.items))return 0;return budget.chapters[chapterKey].items.reduce((sum,item)=>sum+item.VALOR,0);};// Calculate total material costs\nconst calculateTotalMaterialCost=()=>{return Object.keys(budget.chapters).reduce((sum,chapterKey)=>sum+calculateChapterTotal(chapterKey),0);};// Recalculate all budget values\nconst recalculateBudget=()=>{// Recalculate each item value\nconst updatedChapters={...budget.chapters};Object.keys(updatedChapters).forEach(chapterKey=>{updatedChapters[chapterKey].items=updatedChapters[chapterKey].items.map(item=>({...item,VALOR:calculateItemValue(item.QTD,item.VALOR_UNITARIO)}));});// Recalculate total costs\nconst custoSeco=calculateTotalMaterialCost();// Calculate additional costs\nconst diversos=budget.CONTROLE_INTERNO.DIVERSOS.items[0];const diversosTotal=diversos.Alimentacao_Euro+diversos.Passagens_Euro+diversos.Outros_Euro;const subEmpreiteirosTotal=budget.CONTROLE_INTERNO.SUB_EMPREITEIROS.items[0].Total_Euro;const amortizacoesTotal=budget.CONTROLE_INTERNO.AMORTIZACOES.items.reduce((sum,item)=>sum+item.Total_Euro,0);// Calculate total cost\nconst custoTotal=custoSeco+diversosTotal+subEmpreiteirosTotal+amortizacoesTotal;// Calculate margin and sale value\nconst margemPercentual=budget.CONTROLE_INTERNO.VENDA.items[0].Margem_Percentual;const vendaEuro=custoTotal/(1-margemPercentual/100);const margemEuro=vendaEuro-custoTotal;// Update internal control values\nconst updatedControleInterno={...budget.CONTROLE_INTERNO};updatedControleInterno.VENDA.items[0]={...updatedControleInterno.VENDA.items[0],Custo_Seco_Euro:Number(custoSeco.toFixed(2)),Custo_Total_Euro:Number(custoTotal.toFixed(2)),Venda_Euro:Number(vendaEuro.toFixed(2)),Margem_Euro:Number(margemEuro.toFixed(2))};// Update budget state\nsetBudget({...budget,chapters:updatedChapters,CONTROLE_INTERNO:updatedControleInterno});// If connected to Supabase, update internal control data\nif(user&&activeProject){budgetService.updateInternalControl(activeProject,'VENDA',updatedControleInterno.VENDA);}};// Add new item to chapter\nconst addItem=async(chapterKey,newItem)=>{// Update local state first for immediate UI feedback\nconst chapter=budget.chapters[chapterKey];const localItemId=`${chapterKey.split(' ')[1]}-${chapter.items.length+1}`;const calculatedValue=calculateItemValue(newItem.QTD,newItem.VALOR_UNITARIO);const localNewItem={...newItem,id:localItemId,VALOR:calculatedValue};const updatedItems=[...chapter.items,localNewItem];const updatedChapters={...budget.chapters,[chapterKey]:{...chapter,items:updatedItems}};setBudget({...budget,chapters:updatedChapters});// If connected to Supabase, persist to database\nif(user&&activeProject){try{// Find the chapter ID\nconst{data:chapters,error:chaptersError}=await supabase.from('chapters').select('id').eq('project_id',activeProject).eq('chapter_key',chapterKey).single();if(chaptersError){console.error('Error finding chapter:',chaptersError);return;}// Add item to database\nconst{data,error}=await budgetService.createItem(chapters.id,newItem);if(error){console.error('Error adding item to database:',error);// Could revert local state here if needed\nreturn;}// Update local state with server generated ID if needed\n// Currently using the same item ID format\n}catch(err){console.error('Unexpected error adding item:',err);}}recalculateBudget();};// Update existing item\nconst updateItem=async(chapterKey,itemId,updatedItem)=>{// Update local state first for immediate UI feedback\nconst chapter=budget.chapters[chapterKey];const itemIndex=chapter.items.findIndex(item=>item.id===itemId);if(itemIndex===-1)return;const calculatedValue=calculateItemValue(updatedItem.QTD,updatedItem.VALOR_UNITARIO);const updatedItems=[...chapter.items];updatedItems[itemIndex]={...updatedItems[itemIndex],...updatedItem,VALOR:calculatedValue};const updatedChapters={...budget.chapters,[chapterKey]:{...chapter,items:updatedItems}};setBudget({...budget,chapters:updatedChapters});// If connected to Supabase, persist to database\nif(user&&activeProject){try{// Find the database ID of this item\nconst{data:chapters,error:chaptersError}=await supabase.from('chapters').select('id').eq('project_id',activeProject).eq('chapter_key',chapterKey).single();if(chaptersError){console.error('Error finding chapter:',chaptersError);return;}const{data:items,error:itemsError}=await supabase.from('budget_items').select('id').eq('chapter_id',chapters.id).eq('position',itemIndex)// Using position to match\n.single();if(itemsError){console.error('Error finding item:',itemsError);return;}// Update item in database\nconst{error}=await budgetService.updateItem(items.id,updatedItem);if(error){console.error('Error updating item in database:',error);// Could revert local state here if needed\n}}catch(err){console.error('Unexpected error updating item:',err);}}recalculateBudget();};// Delete item\nconst deleteItem=async(chapterKey,itemId)=>{// Update local state first for immediate UI feedback\nconst chapter=budget.chapters[chapterKey];const itemIndex=chapter.items.findIndex(item=>item.id===itemId);if(itemIndex===-1)return;const updatedItems=chapter.items.filter(item=>item.id!==itemId);const updatedChapters={...budget.chapters,[chapterKey]:{...chapter,items:updatedItems}};setBudget({...budget,chapters:updatedChapters});// If connected to Supabase, persist to database\nif(user&&activeProject){try{// Find the database ID of this item\nconst{data:chapters,error:chaptersError}=await supabase.from('chapters').select('id').eq('project_id',activeProject).eq('chapter_key',chapterKey).single();if(chaptersError){console.error('Error finding chapter:',chaptersError);return;}const{data:items,error:itemsError}=await supabase.from('budget_items').select('id').eq('chapter_id',chapters.id).eq('position',itemIndex)// Using position to match\n.single();if(itemsError){console.error('Error finding item:',itemsError);return;}// Delete item from database\nconst{error}=await budgetService.deleteItem(items.id);if(error){console.error('Error deleting item from database:',error);// Could revert local state here if needed\n}}catch(err){console.error('Unexpected error deleting item:',err);}}recalculateBudget();};// Add new chapter\nconst addChapter=async(chapterKey,header)=>{if(budget.chapters[chapterKey])return false;// Chapter already exists\n// Update local state first for immediate UI feedback\nconst updatedChapters={...budget.chapters,[chapterKey]:{header,items:[]}};setBudget({...budget,chapters:updatedChapters});// If connected to Supabase, persist to database\nif(user&&activeProject){try{const{error}=await budgetService.createChapter(activeProject,chapterKey,header);if(error){console.error('Error adding chapter to database:',error);// Could revert local state here if needed\nreturn false;}}catch(err){console.error('Unexpected error adding chapter:',err);return false;}}return true;};// Update margin percentage\nconst updateMarginPercentage=async percentage=>{// Update local state first for immediate UI feedback\nconst updatedControleInterno={...budget.CONTROLE_INTERNO};updatedControleInterno.VENDA.items[0].Margem_Percentual=percentage;setBudget({...budget,CONTROLE_INTERNO:updatedControleInterno});// If connected to Supabase, persist to database\nif(user&&activeProject){try{const{error}=await budgetService.updateInternalControl(activeProject,'VENDA',updatedControleInterno.VENDA);if(error){console.error('Error updating margin in database:',error);// Could revert local state here if needed\n}}catch(err){console.error('Unexpected error updating margin:',err);}}recalculateBudget();};// Update diverse costs\nconst updateDiverseCosts=async diverseCosts=>{// Update local state first for immediate UI feedback\nconst updatedControleInterno={...budget.CONTROLE_INTERNO};updatedControleInterno.DIVERSOS.items[0]={...updatedControleInterno.DIVERSOS.items[0],...diverseCosts};setBudget({...budget,CONTROLE_INTERNO:updatedControleInterno});// If connected to Supabase, persist to database\nif(user&&activeProject){try{const{error}=await budgetService.updateInternalControl(activeProject,'DIVERSOS',updatedControleInterno.DIVERSOS);if(error){console.error('Error updating diverse costs in database:',error);// Could revert local state here if needed\n}}catch(err){console.error('Unexpected error updating diverse costs:',err);}}recalculateBudget();};// Format currency\nconst formatCurrency=value=>{var _budget$configuracoes,_budget$configuracoes2,_budget$configuracoes3;const currency=(budget===null||budget===void 0?void 0:(_budget$configuracoes=budget.configuracoes)===null||_budget$configuracoes===void 0?void 0:_budget$configuracoes.moeda)||'EUR';const locale=(budget===null||budget===void 0?void 0:(_budget$configuracoes2=budget.configuracoes)===null||_budget$configuracoes2===void 0?void 0:_budget$configuracoes2.formato_numero)||'pt-PT';const decimals=(budget===null||budget===void 0?void 0:(_budget$configuracoes3=budget.configuracoes)===null||_budget$configuracoes3===void 0?void 0:_budget$configuracoes3.casas_decimais)||2;return new Intl.NumberFormat(locale,{style:'currency',currency:currency,minimumFractionDigits:decimals}).format(value);};// Add new project\nconst addProject=async projectData=>{if(!user)return null;try{// Add user_id to project data\nconst projectPayload={...projectData,user_id:user.id};const{data,error}=await projectService.createProject(projectPayload);if(error){console.error('Error creating project:',error);setError(error.message);return null;}// Add the project to local state\nconst newProject={...data,active:true// Make the new project active\n};// Update other projects to be inactive\nconst updatedProjects=projects.map(project=>({...project,active:false}));setProjects([...updatedProjects,newProject]);setActiveProject(newProject.id);// Load the new project's budget\nawait loadProjectBudget(newProject.id);return newProject.id;}catch(err){console.error('Unexpected error creating project:',err);setError('Failed to create project. Please try again later.');return null;}};// Set active project\nconst setActiveProjectById=async projectId=>{if(!projectId)return;setActiveProject(projectId);// Update projects active state\nconst updatedProjects=projects.map(project=>({...project,active:project.id===projectId}));setProjects(updatedProjects);// Load the selected project's budget\nawait loadProjectBudget(projectId);};return/*#__PURE__*/_jsx(BudgetContext.Provider,{value:{// Budget data and operations\nbudget,activeChapter,setActiveChapter,showEditItemModal,setShowEditItemModal,showNewChapterModal,setShowNewChapterModal,currentItem,setCurrentItem,addItem,updateItem,deleteItem,addChapter,calculateChapterTotal,calculateTotalMaterialCost,updateMarginPercentage,updateDiverseCosts,formatCurrency,recalculateBudget,// Project management\nprojects,activeProject,addProject,setActiveProjectById,// Status\nloading,error},children:children});};export default BudgetContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","initialBudget","projectService","budgetService","useAuth","supabase","jsx","_jsx","BudgetContext","useBudget","BudgetProvider","_ref","children","user","projects","setProjects","activeProject","setActiveProject","budget","setBudget","activeChapter","setActiveChapter","showEditItemModal","setShowEditItemModal","showNewChapterModal","setShowNewChapterModal","currentItem","setCurrentItem","loading","setLoading","error","setError","loadProjects","data","getProjects","console","message","length","projectsWithActive","map","project","index","active","id","loadProjectBudget","err","projectId","getCompleteProject","chapterKeys","Object","keys","chapters","calculateItemValue","qty","unitPrice","Number","toFixed","calculateChapterTotal","chapterKey","_budget$chapters$chap","items","reduce","sum","item","VALOR","calculateTotalMaterialCost","recalculateBudget","updatedChapters","forEach","QTD","VALOR_UNITARIO","custoSeco","diversos","CONTROLE_INTERNO","DIVERSOS","diversosTotal","Alimentacao_Euro","Passagens_Euro","Outros_Euro","subEmpreiteirosTotal","SUB_EMPREITEIROS","Total_Euro","amortizacoesTotal","AMORTIZACOES","custoTotal","margemPercentual","VENDA","Margem_Percentual","vendaEuro","margemEuro","updatedControleInterno","Custo_Seco_Euro","Custo_Total_Euro","Venda_Euro","Margem_Euro","updateInternalControl","addItem","newItem","chapter","localItemId","split","calculatedValue","localNewItem","updatedItems","chaptersError","from","select","eq","single","createItem","updateItem","itemId","updatedItem","itemIndex","findIndex","itemsError","deleteItem","filter","addChapter","header","createChapter","updateMarginPercentage","percentage","updateDiverseCosts","diverseCosts","formatCurrency","value","_budget$configuracoes","_budget$configuracoes2","_budget$configuracoes3","currency","configuracoes","moeda","locale","formato_numero","decimals","casas_decimais","Intl","NumberFormat","style","minimumFractionDigits","format","addProject","projectData","projectPayload","user_id","createProject","newProject","updatedProjects","setActiveProjectById","Provider"],"sources":["/mnt/c/Users/titob/OneDrive - Ensino Lusófona/EXO/repo-tito/construsud/orcaworks/src/context/BudgetContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport initialBudget from '../data/initialBudget';\nimport { projectService } from '../services/projectService';\nimport { budgetService } from '../services/budgetService';\nimport { useAuth } from './AuthContext';\nimport { supabase } from '../lib/supabase';\n\nconst BudgetContext = createContext();\n\nexport const useBudget = () => useContext(BudgetContext);\n\nexport const BudgetProvider = ({ children }) => {\n  const { user } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(null);\n  const [budget, setBudget] = useState(initialBudget);\n  const [activeChapter, setActiveChapter] = useState('CAR 1');\n  const [showEditItemModal, setShowEditItemModal] = useState(false);\n  const [showNewChapterModal, setShowNewChapterModal] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Load user projects when user is authenticated\n  useEffect(() => {\n    const loadProjects = async () => {\n      if (!user) {\n        setProjects([]);\n        setBudget(initialBudget);\n        setLoading(false);\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        const { data, error } = await projectService.getProjects();\n        \n        if (error) {\n          console.error('Error loading projects:', error);\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n        \n        if (data && data.length > 0) {\n          const projectsWithActive = data.map((project, index) => ({\n            ...project,\n            active: index === 0 // First project is active by default\n          }));\n          \n          setProjects(projectsWithActive);\n          setActiveProject(projectsWithActive[0].id);\n          \n          // Load the first project's budget\n          await loadProjectBudget(projectsWithActive[0].id);\n        } else {\n          // If no projects, use default budget\n          setProjects([]);\n          setBudget(initialBudget);\n        }\n      } catch (err) {\n        console.error('Unexpected error loading projects:', err);\n        setError('Failed to load projects. Please try again later.');\n      }\n      \n      setLoading(false);\n    };\n    \n    loadProjects();\n  }, [user]);\n  \n  // Load complete project data including budget\n  const loadProjectBudget = async (projectId) => {\n    try {\n      const { data, error } = await projectService.getCompleteProject(projectId);\n      \n      if (error) {\n        console.error('Error loading project budget:', error);\n        setError(error.message);\n        return;\n      }\n      \n      setBudget(data.budget);\n      \n      // Set first chapter as active\n      const chapterKeys = Object.keys(data.budget.chapters);\n      if (chapterKeys.length > 0) {\n        setActiveChapter(chapterKeys[0]);\n      }\n      \n    } catch (err) {\n      console.error('Unexpected error loading project budget:', err);\n      setError('Failed to load project data. Please try again later.');\n    }\n  };\n\n  // Calculate item value\n  const calculateItemValue = (qty, unitPrice) => {\n    return Number((qty * unitPrice).toFixed(2));\n  };\n\n  // Calculate chapter total\n  const calculateChapterTotal = (chapterKey) => {\n    if (!budget.chapters[chapterKey]?.items) return 0;\n    return budget.chapters[chapterKey].items.reduce(\n      (sum, item) => sum + item.VALOR,\n      0\n    );\n  };\n\n  // Calculate total material costs\n  const calculateTotalMaterialCost = () => {\n    return Object.keys(budget.chapters).reduce(\n      (sum, chapterKey) => sum + calculateChapterTotal(chapterKey),\n      0\n    );\n  };\n\n  // Recalculate all budget values\n  const recalculateBudget = () => {\n    // Recalculate each item value\n    const updatedChapters = { ...budget.chapters };\n    \n    Object.keys(updatedChapters).forEach(chapterKey => {\n      updatedChapters[chapterKey].items = updatedChapters[chapterKey].items.map(item => ({\n        ...item,\n        VALOR: calculateItemValue(item.QTD, item.VALOR_UNITARIO)\n      }));\n    });\n    \n    // Recalculate total costs\n    const custoSeco = calculateTotalMaterialCost();\n    \n    // Calculate additional costs\n    const diversos = budget.CONTROLE_INTERNO.DIVERSOS.items[0];\n    const diversosTotal = \n      diversos.Alimentacao_Euro + \n      diversos.Passagens_Euro + \n      diversos.Outros_Euro;\n    \n    const subEmpreiteirosTotal = budget.CONTROLE_INTERNO.SUB_EMPREITEIROS.items[0].Total_Euro;\n    \n    const amortizacoesTotal = budget.CONTROLE_INTERNO.AMORTIZACOES.items.reduce(\n      (sum, item) => sum + item.Total_Euro, \n      0\n    );\n    \n    // Calculate total cost\n    const custoTotal = custoSeco + diversosTotal + subEmpreiteirosTotal + amortizacoesTotal;\n    \n    // Calculate margin and sale value\n    const margemPercentual = budget.CONTROLE_INTERNO.VENDA.items[0].Margem_Percentual;\n    const vendaEuro = custoTotal / (1 - (margemPercentual / 100));\n    const margemEuro = vendaEuro - custoTotal;\n    \n    // Update internal control values\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.VENDA.items[0] = {\n      ...updatedControleInterno.VENDA.items[0],\n      Custo_Seco_Euro: Number(custoSeco.toFixed(2)),\n      Custo_Total_Euro: Number(custoTotal.toFixed(2)),\n      Venda_Euro: Number(vendaEuro.toFixed(2)),\n      Margem_Euro: Number(margemEuro.toFixed(2))\n    };\n    \n    // Update budget state\n    setBudget({\n      ...budget,\n      chapters: updatedChapters,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, update internal control data\n    if (user && activeProject) {\n      budgetService.updateInternalControl(\n        activeProject, \n        'VENDA', \n        updatedControleInterno.VENDA\n      );\n    }\n  };\n\n  // Add new item to chapter\n  const addItem = async (chapterKey, newItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const localItemId = `${chapterKey.split(' ')[1]}-${chapter.items.length + 1}`;\n    const calculatedValue = calculateItemValue(newItem.QTD, newItem.VALOR_UNITARIO);\n    \n    const localNewItem = {\n      ...newItem,\n      id: localItemId,\n      VALOR: calculatedValue\n    };\n    \n    const updatedItems = [...chapter.items, localNewItem];\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the chapter ID\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        // Add item to database\n        const { data, error } = await budgetService.createItem(chapters.id, newItem);\n        \n        if (error) {\n          console.error('Error adding item to database:', error);\n          // Could revert local state here if needed\n          return;\n        }\n        \n        // Update local state with server generated ID if needed\n        // Currently using the same item ID format\n      } catch (err) {\n        console.error('Unexpected error adding item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Update existing item\n  const updateItem = async (chapterKey, itemId, updatedItem) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex === -1) return;\n    \n    const calculatedValue = calculateItemValue(updatedItem.QTD, updatedItem.VALOR_UNITARIO);\n    \n    const updatedItems = [...chapter.items];\n    updatedItems[itemIndex] = {\n      ...updatedItems[itemIndex],\n      ...updatedItem,\n      VALOR: calculatedValue\n    };\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        const { data: items, error: itemsError } = await supabase\n          .from('budget_items')\n          .select('id')\n          .eq('chapter_id', chapters.id)\n          .eq('position', itemIndex) // Using position to match\n          .single();\n        \n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n        \n        // Update item in database\n        const { error } = await budgetService.updateItem(items.id, updatedItem);\n        \n        if (error) {\n          console.error('Error updating item in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Delete item\n  const deleteItem = async (chapterKey, itemId) => {\n    // Update local state first for immediate UI feedback\n    const chapter = budget.chapters[chapterKey];\n    const itemIndex = chapter.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex === -1) return;\n    \n    const updatedItems = chapter.items.filter(item => item.id !== itemId);\n    \n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        ...chapter,\n        items: updatedItems\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        // Find the database ID of this item\n        const { data: chapters, error: chaptersError } = await supabase\n          .from('chapters')\n          .select('id')\n          .eq('project_id', activeProject)\n          .eq('chapter_key', chapterKey)\n          .single();\n        \n        if (chaptersError) {\n          console.error('Error finding chapter:', chaptersError);\n          return;\n        }\n        \n        const { data: items, error: itemsError } = await supabase\n          .from('budget_items')\n          .select('id')\n          .eq('chapter_id', chapters.id)\n          .eq('position', itemIndex) // Using position to match\n          .single();\n        \n        if (itemsError) {\n          console.error('Error finding item:', itemsError);\n          return;\n        }\n        \n        // Delete item from database\n        const { error } = await budgetService.deleteItem(items.id);\n        \n        if (error) {\n          console.error('Error deleting item from database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error deleting item:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Add new chapter\n  const addChapter = async (chapterKey, header) => {\n    if (budget.chapters[chapterKey]) return false; // Chapter already exists\n    \n    // Update local state first for immediate UI feedback\n    const updatedChapters = {\n      ...budget.chapters,\n      [chapterKey]: {\n        header,\n        items: []\n      }\n    };\n    \n    setBudget({\n      ...budget,\n      chapters: updatedChapters\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.createChapter(activeProject, chapterKey, header);\n        \n        if (error) {\n          console.error('Error adding chapter to database:', error);\n          // Could revert local state here if needed\n          return false;\n        }\n      } catch (err) {\n        console.error('Unexpected error adding chapter:', err);\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // Update margin percentage\n  const updateMarginPercentage = async (percentage) => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.VENDA.items[0].Margem_Percentual = percentage;\n    \n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.updateInternalControl(\n          activeProject,\n          'VENDA',\n          updatedControleInterno.VENDA\n        );\n        \n        if (error) {\n          console.error('Error updating margin in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating margin:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Update diverse costs\n  const updateDiverseCosts = async (diverseCosts) => {\n    // Update local state first for immediate UI feedback\n    const updatedControleInterno = { ...budget.CONTROLE_INTERNO };\n    updatedControleInterno.DIVERSOS.items[0] = {\n      ...updatedControleInterno.DIVERSOS.items[0],\n      ...diverseCosts\n    };\n    \n    setBudget({\n      ...budget,\n      CONTROLE_INTERNO: updatedControleInterno\n    });\n    \n    // If connected to Supabase, persist to database\n    if (user && activeProject) {\n      try {\n        const { error } = await budgetService.updateInternalControl(\n          activeProject,\n          'DIVERSOS',\n          updatedControleInterno.DIVERSOS\n        );\n        \n        if (error) {\n          console.error('Error updating diverse costs in database:', error);\n          // Could revert local state here if needed\n        }\n      } catch (err) {\n        console.error('Unexpected error updating diverse costs:', err);\n      }\n    }\n    \n    recalculateBudget();\n  };\n\n  // Format currency\n  const formatCurrency = (value) => {\n    const currency = budget?.configuracoes?.moeda || 'EUR';\n    const locale = budget?.configuracoes?.formato_numero || 'pt-PT';\n    const decimals = budget?.configuracoes?.casas_decimais || 2;\n    \n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: decimals\n    }).format(value);\n  };\n  \n  // Add new project\n  const addProject = async (projectData) => {\n    if (!user) return null;\n    \n    try {\n      // Add user_id to project data\n      const projectPayload = {\n        ...projectData,\n        user_id: user.id\n      };\n      \n      const { data, error } = await projectService.createProject(projectPayload);\n      \n      if (error) {\n        console.error('Error creating project:', error);\n        setError(error.message);\n        return null;\n      }\n      \n      // Add the project to local state\n      const newProject = {\n        ...data,\n        active: true // Make the new project active\n      };\n      \n      // Update other projects to be inactive\n      const updatedProjects = projects.map(project => ({\n        ...project,\n        active: false\n      }));\n      \n      setProjects([...updatedProjects, newProject]);\n      setActiveProject(newProject.id);\n      \n      // Load the new project's budget\n      await loadProjectBudget(newProject.id);\n      \n      return newProject.id;\n    } catch (err) {\n      console.error('Unexpected error creating project:', err);\n      setError('Failed to create project. Please try again later.');\n      return null;\n    }\n  };\n  \n  // Set active project\n  const setActiveProjectById = async (projectId) => {\n    if (!projectId) return;\n    \n    setActiveProject(projectId);\n    \n    // Update projects active state\n    const updatedProjects = projects.map(project => ({\n      ...project,\n      active: project.id === projectId\n    }));\n    \n    setProjects(updatedProjects);\n    \n    // Load the selected project's budget\n    await loadProjectBudget(projectId);\n  };\n\n  return (\n    <BudgetContext.Provider\n      value={{\n        // Budget data and operations\n        budget,\n        activeChapter,\n        setActiveChapter,\n        showEditItemModal,\n        setShowEditItemModal,\n        showNewChapterModal,\n        setShowNewChapterModal,\n        currentItem,\n        setCurrentItem,\n        addItem,\n        updateItem,\n        deleteItem,\n        addChapter,\n        calculateChapterTotal,\n        calculateTotalMaterialCost,\n        updateMarginPercentage,\n        updateDiverseCosts,\n        formatCurrency,\n        recalculateBudget,\n        \n        // Project management\n        projects,\n        activeProject,\n        addProject,\n        setActiveProjectById,\n        \n        // Status\n        loading,\n        error\n      }}\n    >\n      {children}\n    </BudgetContext.Provider>\n  );\n};\n\nexport default BudgetContext;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,aAAa,KAAM,uBAAuB,CACjD,OAASC,cAAc,KAAQ,4BAA4B,CAC3D,OAASC,aAAa,KAAQ,2BAA2B,CACzD,OAASC,OAAO,KAAQ,eAAe,CACvC,OAASC,QAAQ,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3C,KAAM,CAAAC,aAAa,cAAGX,aAAa,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAY,SAAS,CAAGA,CAAA,GAAMV,UAAU,CAACS,aAAa,CAAC,CAExD,MAAO,MAAM,CAAAE,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAAEE,IAAK,CAAC,CAAGT,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACoB,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAACG,aAAa,CAAC,CACnD,KAAM,CAACmB,aAAa,CAAEC,gBAAgB,CAAC,CAAGvB,QAAQ,CAAC,OAAO,CAAC,CAC3D,KAAM,CAACwB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAAC0B,mBAAmB,CAAEC,sBAAsB,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CACrE,KAAM,CAAC4B,WAAW,CAAEC,cAAc,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAAC8B,OAAO,CAAEC,UAAU,CAAC,CAAG/B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgC,KAAK,CAAEC,QAAQ,CAAC,CAAGjC,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CAACnB,IAAI,CAAE,CACTE,WAAW,CAAC,EAAE,CAAC,CACfI,SAAS,CAAClB,aAAa,CAAC,CACxB4B,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEAA,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAEI,IAAI,CAAEH,KAAM,CAAC,CAAG,KAAM,CAAA5B,cAAc,CAACgC,WAAW,CAAC,CAAC,CAE1D,GAAIJ,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CC,QAAQ,CAACD,KAAK,CAACM,OAAO,CAAC,CACvBP,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA,GAAII,IAAI,EAAIA,IAAI,CAACI,MAAM,CAAG,CAAC,CAAE,CAC3B,KAAM,CAAAC,kBAAkB,CAAGL,IAAI,CAACM,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAM,CACvD,GAAGD,OAAO,CACVE,MAAM,CAAED,KAAK,GAAK,CAAE;AACtB,CAAC,CAAC,CAAC,CAEH1B,WAAW,CAACuB,kBAAkB,CAAC,CAC/BrB,gBAAgB,CAACqB,kBAAkB,CAAC,CAAC,CAAC,CAACK,EAAE,CAAC,CAE1C;AACA,KAAM,CAAAC,iBAAiB,CAACN,kBAAkB,CAAC,CAAC,CAAC,CAACK,EAAE,CAAC,CACnD,CAAC,IAAM,CACL;AACA5B,WAAW,CAAC,EAAE,CAAC,CACfI,SAAS,CAAClB,aAAa,CAAC,CAC1B,CACF,CAAE,MAAO4C,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,oCAAoC,CAAEe,GAAG,CAAC,CACxDd,QAAQ,CAAC,kDAAkD,CAAC,CAC9D,CAEAF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDG,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAACnB,IAAI,CAAC,CAAC,CAEV;AACA,KAAM,CAAA+B,iBAAiB,CAAG,KAAO,CAAAE,SAAS,EAAK,CAC7C,GAAI,CACF,KAAM,CAAEb,IAAI,CAAEH,KAAM,CAAC,CAAG,KAAM,CAAA5B,cAAc,CAAC6C,kBAAkB,CAACD,SAAS,CAAC,CAE1E,GAAIhB,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDC,QAAQ,CAACD,KAAK,CAACM,OAAO,CAAC,CACvB,OACF,CAEAjB,SAAS,CAACc,IAAI,CAACf,MAAM,CAAC,CAEtB;AACA,KAAM,CAAA8B,WAAW,CAAGC,MAAM,CAACC,IAAI,CAACjB,IAAI,CAACf,MAAM,CAACiC,QAAQ,CAAC,CACrD,GAAIH,WAAW,CAACX,MAAM,CAAG,CAAC,CAAE,CAC1BhB,gBAAgB,CAAC2B,WAAW,CAAC,CAAC,CAAC,CAAC,CAClC,CAEF,CAAE,MAAOH,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,0CAA0C,CAAEe,GAAG,CAAC,CAC9Dd,QAAQ,CAAC,sDAAsD,CAAC,CAClE,CACF,CAAC,CAED;AACA,KAAM,CAAAqB,kBAAkB,CAAGA,CAACC,GAAG,CAAEC,SAAS,GAAK,CAC7C,MAAO,CAAAC,MAAM,CAAC,CAACF,GAAG,CAAGC,SAAS,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC,CAC7C,CAAC,CAED;AACA,KAAM,CAAAC,qBAAqB,CAAIC,UAAU,EAAK,KAAAC,qBAAA,CAC5C,GAAI,GAAAA,qBAAA,CAACzC,MAAM,CAACiC,QAAQ,CAACO,UAAU,CAAC,UAAAC,qBAAA,WAA3BA,qBAAA,CAA6BC,KAAK,EAAE,MAAO,EAAC,CACjD,MAAO,CAAA1C,MAAM,CAACiC,QAAQ,CAACO,UAAU,CAAC,CAACE,KAAK,CAACC,MAAM,CAC7C,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,CAAGC,IAAI,CAACC,KAAK,CAC/B,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAC,0BAA0B,CAAGA,CAAA,GAAM,CACvC,MAAO,CAAAhB,MAAM,CAACC,IAAI,CAAChC,MAAM,CAACiC,QAAQ,CAAC,CAACU,MAAM,CACxC,CAACC,GAAG,CAAEJ,UAAU,GAAKI,GAAG,CAAGL,qBAAqB,CAACC,UAAU,CAAC,CAC5D,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAQ,iBAAiB,CAAGA,CAAA,GAAM,CAC9B;AACA,KAAM,CAAAC,eAAe,CAAG,CAAE,GAAGjD,MAAM,CAACiC,QAAS,CAAC,CAE9CF,MAAM,CAACC,IAAI,CAACiB,eAAe,CAAC,CAACC,OAAO,CAACV,UAAU,EAAI,CACjDS,eAAe,CAACT,UAAU,CAAC,CAACE,KAAK,CAAGO,eAAe,CAACT,UAAU,CAAC,CAACE,KAAK,CAACrB,GAAG,CAACwB,IAAI,GAAK,CACjF,GAAGA,IAAI,CACPC,KAAK,CAAEZ,kBAAkB,CAACW,IAAI,CAACM,GAAG,CAAEN,IAAI,CAACO,cAAc,CACzD,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,SAAS,CAAGN,0BAA0B,CAAC,CAAC,CAE9C;AACA,KAAM,CAAAO,QAAQ,CAAGtD,MAAM,CAACuD,gBAAgB,CAACC,QAAQ,CAACd,KAAK,CAAC,CAAC,CAAC,CAC1D,KAAM,CAAAe,aAAa,CACjBH,QAAQ,CAACI,gBAAgB,CACzBJ,QAAQ,CAACK,cAAc,CACvBL,QAAQ,CAACM,WAAW,CAEtB,KAAM,CAAAC,oBAAoB,CAAG7D,MAAM,CAACuD,gBAAgB,CAACO,gBAAgB,CAACpB,KAAK,CAAC,CAAC,CAAC,CAACqB,UAAU,CAEzF,KAAM,CAAAC,iBAAiB,CAAGhE,MAAM,CAACuD,gBAAgB,CAACU,YAAY,CAACvB,KAAK,CAACC,MAAM,CACzE,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,CAAGC,IAAI,CAACkB,UAAU,CACpC,CACF,CAAC,CAED;AACA,KAAM,CAAAG,UAAU,CAAGb,SAAS,CAAGI,aAAa,CAAGI,oBAAoB,CAAGG,iBAAiB,CAEvF;AACA,KAAM,CAAAG,gBAAgB,CAAGnE,MAAM,CAACuD,gBAAgB,CAACa,KAAK,CAAC1B,KAAK,CAAC,CAAC,CAAC,CAAC2B,iBAAiB,CACjF,KAAM,CAAAC,SAAS,CAAGJ,UAAU,EAAI,CAAC,CAAIC,gBAAgB,CAAG,GAAI,CAAC,CAC7D,KAAM,CAAAI,UAAU,CAAGD,SAAS,CAAGJ,UAAU,CAEzC;AACA,KAAM,CAAAM,sBAAsB,CAAG,CAAE,GAAGxE,MAAM,CAACuD,gBAAiB,CAAC,CAC7DiB,sBAAsB,CAACJ,KAAK,CAAC1B,KAAK,CAAC,CAAC,CAAC,CAAG,CACtC,GAAG8B,sBAAsB,CAACJ,KAAK,CAAC1B,KAAK,CAAC,CAAC,CAAC,CACxC+B,eAAe,CAAEpC,MAAM,CAACgB,SAAS,CAACf,OAAO,CAAC,CAAC,CAAC,CAAC,CAC7CoC,gBAAgB,CAAErC,MAAM,CAAC6B,UAAU,CAAC5B,OAAO,CAAC,CAAC,CAAC,CAAC,CAC/CqC,UAAU,CAAEtC,MAAM,CAACiC,SAAS,CAAChC,OAAO,CAAC,CAAC,CAAC,CAAC,CACxCsC,WAAW,CAAEvC,MAAM,CAACkC,UAAU,CAACjC,OAAO,CAAC,CAAC,CAAC,CAC3C,CAAC,CAED;AACArC,SAAS,CAAC,CACR,GAAGD,MAAM,CACTiC,QAAQ,CAAEgB,eAAe,CACzBM,gBAAgB,CAAEiB,sBACpB,CAAC,CAAC,CAEF;AACA,GAAI7E,IAAI,EAAIG,aAAa,CAAE,CACzBb,aAAa,CAAC4F,qBAAqB,CACjC/E,aAAa,CACb,OAAO,CACP0E,sBAAsB,CAACJ,KACzB,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAU,OAAO,CAAG,KAAAA,CAAOtC,UAAU,CAAEuC,OAAO,GAAK,CAC7C;AACA,KAAM,CAAAC,OAAO,CAAGhF,MAAM,CAACiC,QAAQ,CAACO,UAAU,CAAC,CAC3C,KAAM,CAAAyC,WAAW,CAAG,GAAGzC,UAAU,CAAC0C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIF,OAAO,CAACtC,KAAK,CAACvB,MAAM,CAAG,CAAC,EAAE,CAC7E,KAAM,CAAAgE,eAAe,CAAGjD,kBAAkB,CAAC6C,OAAO,CAAC5B,GAAG,CAAE4B,OAAO,CAAC3B,cAAc,CAAC,CAE/E,KAAM,CAAAgC,YAAY,CAAG,CACnB,GAAGL,OAAO,CACVtD,EAAE,CAAEwD,WAAW,CACfnC,KAAK,CAAEqC,eACT,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,CAAC,GAAGL,OAAO,CAACtC,KAAK,CAAE0C,YAAY,CAAC,CAErD,KAAM,CAAAnC,eAAe,CAAG,CACtB,GAAGjD,MAAM,CAACiC,QAAQ,CAClB,CAACO,UAAU,EAAG,CACZ,GAAGwC,OAAO,CACVtC,KAAK,CAAE2C,YACT,CACF,CAAC,CAEDpF,SAAS,CAAC,CACR,GAAGD,MAAM,CACTiC,QAAQ,CAAEgB,eACZ,CAAC,CAAC,CAEF;AACA,GAAItD,IAAI,EAAIG,aAAa,CAAE,CACzB,GAAI,CACF;AACA,KAAM,CAAEiB,IAAI,CAAEkB,QAAQ,CAAErB,KAAK,CAAE0E,aAAc,CAAC,CAAG,KAAM,CAAAnG,QAAQ,CAC5DoG,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,IAAI,CAAC,CACZC,EAAE,CAAC,YAAY,CAAE3F,aAAa,CAAC,CAC/B2F,EAAE,CAAC,aAAa,CAAEjD,UAAU,CAAC,CAC7BkD,MAAM,CAAC,CAAC,CAEX,GAAIJ,aAAa,CAAE,CACjBrE,OAAO,CAACL,KAAK,CAAC,wBAAwB,CAAE0E,aAAa,CAAC,CACtD,OACF,CAEA;AACA,KAAM,CAAEvE,IAAI,CAAEH,KAAM,CAAC,CAAG,KAAM,CAAA3B,aAAa,CAAC0G,UAAU,CAAC1D,QAAQ,CAACR,EAAE,CAAEsD,OAAO,CAAC,CAE5E,GAAInE,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD;AACA,OACF,CAEA;AACA;AACF,CAAE,MAAOe,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,+BAA+B,CAAEe,GAAG,CAAC,CACrD,CACF,CAEAqB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAA4C,UAAU,CAAG,KAAAA,CAAOpD,UAAU,CAAEqD,MAAM,CAAEC,WAAW,GAAK,CAC5D;AACA,KAAM,CAAAd,OAAO,CAAGhF,MAAM,CAACiC,QAAQ,CAACO,UAAU,CAAC,CAC3C,KAAM,CAAAuD,SAAS,CAAGf,OAAO,CAACtC,KAAK,CAACsD,SAAS,CAACnD,IAAI,EAAIA,IAAI,CAACpB,EAAE,GAAKoE,MAAM,CAAC,CAErE,GAAIE,SAAS,GAAK,CAAC,CAAC,CAAE,OAEtB,KAAM,CAAAZ,eAAe,CAAGjD,kBAAkB,CAAC4D,WAAW,CAAC3C,GAAG,CAAE2C,WAAW,CAAC1C,cAAc,CAAC,CAEvF,KAAM,CAAAiC,YAAY,CAAG,CAAC,GAAGL,OAAO,CAACtC,KAAK,CAAC,CACvC2C,YAAY,CAACU,SAAS,CAAC,CAAG,CACxB,GAAGV,YAAY,CAACU,SAAS,CAAC,CAC1B,GAAGD,WAAW,CACdhD,KAAK,CAAEqC,eACT,CAAC,CAED,KAAM,CAAAlC,eAAe,CAAG,CACtB,GAAGjD,MAAM,CAACiC,QAAQ,CAClB,CAACO,UAAU,EAAG,CACZ,GAAGwC,OAAO,CACVtC,KAAK,CAAE2C,YACT,CACF,CAAC,CAEDpF,SAAS,CAAC,CACR,GAAGD,MAAM,CACTiC,QAAQ,CAAEgB,eACZ,CAAC,CAAC,CAEF;AACA,GAAItD,IAAI,EAAIG,aAAa,CAAE,CACzB,GAAI,CACF;AACA,KAAM,CAAEiB,IAAI,CAAEkB,QAAQ,CAAErB,KAAK,CAAE0E,aAAc,CAAC,CAAG,KAAM,CAAAnG,QAAQ,CAC5DoG,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,IAAI,CAAC,CACZC,EAAE,CAAC,YAAY,CAAE3F,aAAa,CAAC,CAC/B2F,EAAE,CAAC,aAAa,CAAEjD,UAAU,CAAC,CAC7BkD,MAAM,CAAC,CAAC,CAEX,GAAIJ,aAAa,CAAE,CACjBrE,OAAO,CAACL,KAAK,CAAC,wBAAwB,CAAE0E,aAAa,CAAC,CACtD,OACF,CAEA,KAAM,CAAEvE,IAAI,CAAE2B,KAAK,CAAE9B,KAAK,CAAEqF,UAAW,CAAC,CAAG,KAAM,CAAA9G,QAAQ,CACtDoG,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,IAAI,CAAC,CACZC,EAAE,CAAC,YAAY,CAAExD,QAAQ,CAACR,EAAE,CAAC,CAC7BgE,EAAE,CAAC,UAAU,CAAEM,SAAS,CAAE;AAAA,CAC1BL,MAAM,CAAC,CAAC,CAEX,GAAIO,UAAU,CAAE,CACdhF,OAAO,CAACL,KAAK,CAAC,qBAAqB,CAAEqF,UAAU,CAAC,CAChD,OACF,CAEA;AACA,KAAM,CAAErF,KAAM,CAAC,CAAG,KAAM,CAAA3B,aAAa,CAAC2G,UAAU,CAAClD,KAAK,CAACjB,EAAE,CAAEqE,WAAW,CAAC,CAEvE,GAAIlF,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxD;AACF,CACF,CAAE,MAAOe,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,iCAAiC,CAAEe,GAAG,CAAC,CACvD,CACF,CAEAqB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAAkD,UAAU,CAAG,KAAAA,CAAO1D,UAAU,CAAEqD,MAAM,GAAK,CAC/C;AACA,KAAM,CAAAb,OAAO,CAAGhF,MAAM,CAACiC,QAAQ,CAACO,UAAU,CAAC,CAC3C,KAAM,CAAAuD,SAAS,CAAGf,OAAO,CAACtC,KAAK,CAACsD,SAAS,CAACnD,IAAI,EAAIA,IAAI,CAACpB,EAAE,GAAKoE,MAAM,CAAC,CAErE,GAAIE,SAAS,GAAK,CAAC,CAAC,CAAE,OAEtB,KAAM,CAAAV,YAAY,CAAGL,OAAO,CAACtC,KAAK,CAACyD,MAAM,CAACtD,IAAI,EAAIA,IAAI,CAACpB,EAAE,GAAKoE,MAAM,CAAC,CAErE,KAAM,CAAA5C,eAAe,CAAG,CACtB,GAAGjD,MAAM,CAACiC,QAAQ,CAClB,CAACO,UAAU,EAAG,CACZ,GAAGwC,OAAO,CACVtC,KAAK,CAAE2C,YACT,CACF,CAAC,CAEDpF,SAAS,CAAC,CACR,GAAGD,MAAM,CACTiC,QAAQ,CAAEgB,eACZ,CAAC,CAAC,CAEF;AACA,GAAItD,IAAI,EAAIG,aAAa,CAAE,CACzB,GAAI,CACF;AACA,KAAM,CAAEiB,IAAI,CAAEkB,QAAQ,CAAErB,KAAK,CAAE0E,aAAc,CAAC,CAAG,KAAM,CAAAnG,QAAQ,CAC5DoG,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,IAAI,CAAC,CACZC,EAAE,CAAC,YAAY,CAAE3F,aAAa,CAAC,CAC/B2F,EAAE,CAAC,aAAa,CAAEjD,UAAU,CAAC,CAC7BkD,MAAM,CAAC,CAAC,CAEX,GAAIJ,aAAa,CAAE,CACjBrE,OAAO,CAACL,KAAK,CAAC,wBAAwB,CAAE0E,aAAa,CAAC,CACtD,OACF,CAEA,KAAM,CAAEvE,IAAI,CAAE2B,KAAK,CAAE9B,KAAK,CAAEqF,UAAW,CAAC,CAAG,KAAM,CAAA9G,QAAQ,CACtDoG,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,IAAI,CAAC,CACZC,EAAE,CAAC,YAAY,CAAExD,QAAQ,CAACR,EAAE,CAAC,CAC7BgE,EAAE,CAAC,UAAU,CAAEM,SAAS,CAAE;AAAA,CAC1BL,MAAM,CAAC,CAAC,CAEX,GAAIO,UAAU,CAAE,CACdhF,OAAO,CAACL,KAAK,CAAC,qBAAqB,CAAEqF,UAAU,CAAC,CAChD,OACF,CAEA;AACA,KAAM,CAAErF,KAAM,CAAC,CAAG,KAAM,CAAA3B,aAAa,CAACiH,UAAU,CAACxD,KAAK,CAACjB,EAAE,CAAC,CAE1D,GAAIb,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D;AACF,CACF,CAAE,MAAOe,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,iCAAiC,CAAEe,GAAG,CAAC,CACvD,CACF,CAEAqB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAAoD,UAAU,CAAG,KAAAA,CAAO5D,UAAU,CAAE6D,MAAM,GAAK,CAC/C,GAAIrG,MAAM,CAACiC,QAAQ,CAACO,UAAU,CAAC,CAAE,MAAO,MAAK,CAAE;AAE/C;AACA,KAAM,CAAAS,eAAe,CAAG,CACtB,GAAGjD,MAAM,CAACiC,QAAQ,CAClB,CAACO,UAAU,EAAG,CACZ6D,MAAM,CACN3D,KAAK,CAAE,EACT,CACF,CAAC,CAEDzC,SAAS,CAAC,CACR,GAAGD,MAAM,CACTiC,QAAQ,CAAEgB,eACZ,CAAC,CAAC,CAEF;AACA,GAAItD,IAAI,EAAIG,aAAa,CAAE,CACzB,GAAI,CACF,KAAM,CAAEc,KAAM,CAAC,CAAG,KAAM,CAAA3B,aAAa,CAACqH,aAAa,CAACxG,aAAa,CAAE0C,UAAU,CAAE6D,MAAM,CAAC,CAEtF,GAAIzF,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD;AACA,MAAO,MAAK,CACd,CACF,CAAE,MAAOe,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,kCAAkC,CAAEe,GAAG,CAAC,CACtD,MAAO,MAAK,CACd,CACF,CAEA,MAAO,KAAI,CACb,CAAC,CAED;AACA,KAAM,CAAA4E,sBAAsB,CAAG,KAAO,CAAAC,UAAU,EAAK,CACnD;AACA,KAAM,CAAAhC,sBAAsB,CAAG,CAAE,GAAGxE,MAAM,CAACuD,gBAAiB,CAAC,CAC7DiB,sBAAsB,CAACJ,KAAK,CAAC1B,KAAK,CAAC,CAAC,CAAC,CAAC2B,iBAAiB,CAAGmC,UAAU,CAEpEvG,SAAS,CAAC,CACR,GAAGD,MAAM,CACTuD,gBAAgB,CAAEiB,sBACpB,CAAC,CAAC,CAEF;AACA,GAAI7E,IAAI,EAAIG,aAAa,CAAE,CACzB,GAAI,CACF,KAAM,CAAEc,KAAM,CAAC,CAAG,KAAM,CAAA3B,aAAa,CAAC4F,qBAAqB,CACzD/E,aAAa,CACb,OAAO,CACP0E,sBAAsB,CAACJ,KACzB,CAAC,CAED,GAAIxD,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D;AACF,CACF,CAAE,MAAOe,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,mCAAmC,CAAEe,GAAG,CAAC,CACzD,CACF,CAEAqB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAAyD,kBAAkB,CAAG,KAAO,CAAAC,YAAY,EAAK,CACjD;AACA,KAAM,CAAAlC,sBAAsB,CAAG,CAAE,GAAGxE,MAAM,CAACuD,gBAAiB,CAAC,CAC7DiB,sBAAsB,CAAChB,QAAQ,CAACd,KAAK,CAAC,CAAC,CAAC,CAAG,CACzC,GAAG8B,sBAAsB,CAAChB,QAAQ,CAACd,KAAK,CAAC,CAAC,CAAC,CAC3C,GAAGgE,YACL,CAAC,CAEDzG,SAAS,CAAC,CACR,GAAGD,MAAM,CACTuD,gBAAgB,CAAEiB,sBACpB,CAAC,CAAC,CAEF;AACA,GAAI7E,IAAI,EAAIG,aAAa,CAAE,CACzB,GAAI,CACF,KAAM,CAAEc,KAAM,CAAC,CAAG,KAAM,CAAA3B,aAAa,CAAC4F,qBAAqB,CACzD/E,aAAa,CACb,UAAU,CACV0E,sBAAsB,CAAChB,QACzB,CAAC,CAED,GAAI5C,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACjE;AACF,CACF,CAAE,MAAOe,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,0CAA0C,CAAEe,GAAG,CAAC,CAChE,CACF,CAEAqB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAA2D,cAAc,CAAIC,KAAK,EAAK,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAChC,KAAM,CAAAC,QAAQ,CAAG,CAAAhH,MAAM,SAANA,MAAM,kBAAA6G,qBAAA,CAAN7G,MAAM,CAAEiH,aAAa,UAAAJ,qBAAA,iBAArBA,qBAAA,CAAuBK,KAAK,GAAI,KAAK,CACtD,KAAM,CAAAC,MAAM,CAAG,CAAAnH,MAAM,SAANA,MAAM,kBAAA8G,sBAAA,CAAN9G,MAAM,CAAEiH,aAAa,UAAAH,sBAAA,iBAArBA,sBAAA,CAAuBM,cAAc,GAAI,OAAO,CAC/D,KAAM,CAAAC,QAAQ,CAAG,CAAArH,MAAM,SAANA,MAAM,kBAAA+G,sBAAA,CAAN/G,MAAM,CAAEiH,aAAa,UAAAF,sBAAA,iBAArBA,sBAAA,CAAuBO,cAAc,GAAI,CAAC,CAE3D,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAACL,MAAM,CAAE,CACnCM,KAAK,CAAE,UAAU,CACjBT,QAAQ,CAAEA,QAAQ,CAClBU,qBAAqB,CAAEL,QACzB,CAAC,CAAC,CAACM,MAAM,CAACf,KAAK,CAAC,CAClB,CAAC,CAED;AACA,KAAM,CAAAgB,UAAU,CAAG,KAAO,CAAAC,WAAW,EAAK,CACxC,GAAI,CAAClI,IAAI,CAAE,MAAO,KAAI,CAEtB,GAAI,CACF;AACA,KAAM,CAAAmI,cAAc,CAAG,CACrB,GAAGD,WAAW,CACdE,OAAO,CAAEpI,IAAI,CAAC8B,EAChB,CAAC,CAED,KAAM,CAAEV,IAAI,CAAEH,KAAM,CAAC,CAAG,KAAM,CAAA5B,cAAc,CAACgJ,aAAa,CAACF,cAAc,CAAC,CAE1E,GAAIlH,KAAK,CAAE,CACTK,OAAO,CAACL,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CC,QAAQ,CAACD,KAAK,CAACM,OAAO,CAAC,CACvB,MAAO,KAAI,CACb,CAEA;AACA,KAAM,CAAA+G,UAAU,CAAG,CACjB,GAAGlH,IAAI,CACPS,MAAM,CAAE,IAAK;AACf,CAAC,CAED;AACA,KAAM,CAAA0G,eAAe,CAAGtI,QAAQ,CAACyB,GAAG,CAACC,OAAO,GAAK,CAC/C,GAAGA,OAAO,CACVE,MAAM,CAAE,KACV,CAAC,CAAC,CAAC,CAEH3B,WAAW,CAAC,CAAC,GAAGqI,eAAe,CAAED,UAAU,CAAC,CAAC,CAC7ClI,gBAAgB,CAACkI,UAAU,CAACxG,EAAE,CAAC,CAE/B;AACA,KAAM,CAAAC,iBAAiB,CAACuG,UAAU,CAACxG,EAAE,CAAC,CAEtC,MAAO,CAAAwG,UAAU,CAACxG,EAAE,CACtB,CAAE,MAAOE,GAAG,CAAE,CACZV,OAAO,CAACL,KAAK,CAAC,oCAAoC,CAAEe,GAAG,CAAC,CACxDd,QAAQ,CAAC,mDAAmD,CAAC,CAC7D,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAsH,oBAAoB,CAAG,KAAO,CAAAvG,SAAS,EAAK,CAChD,GAAI,CAACA,SAAS,CAAE,OAEhB7B,gBAAgB,CAAC6B,SAAS,CAAC,CAE3B;AACA,KAAM,CAAAsG,eAAe,CAAGtI,QAAQ,CAACyB,GAAG,CAACC,OAAO,GAAK,CAC/C,GAAGA,OAAO,CACVE,MAAM,CAAEF,OAAO,CAACG,EAAE,GAAKG,SACzB,CAAC,CAAC,CAAC,CAEH/B,WAAW,CAACqI,eAAe,CAAC,CAE5B;AACA,KAAM,CAAAxG,iBAAiB,CAACE,SAAS,CAAC,CACpC,CAAC,CAED,mBACEvC,IAAA,CAACC,aAAa,CAAC8I,QAAQ,EACrBxB,KAAK,CAAE,CACL;AACA5G,MAAM,CACNE,aAAa,CACbC,gBAAgB,CAChBC,iBAAiB,CACjBC,oBAAoB,CACpBC,mBAAmB,CACnBC,sBAAsB,CACtBC,WAAW,CACXC,cAAc,CACdqE,OAAO,CACPc,UAAU,CACVM,UAAU,CACVE,UAAU,CACV7D,qBAAqB,CACrBQ,0BAA0B,CAC1BwD,sBAAsB,CACtBE,kBAAkB,CAClBE,cAAc,CACd3D,iBAAiB,CAEjB;AACApD,QAAQ,CACRE,aAAa,CACb8H,UAAU,CACVO,oBAAoB,CAEpB;AACAzH,OAAO,CACPE,KACF,CAAE,CAAAlB,QAAA,CAEDA,QAAQ,CACa,CAAC,CAE7B,CAAC,CAED,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}